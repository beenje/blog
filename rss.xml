<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tchut-Tchut Blog</title><link>http://beenje.github.io/blog/</link><description>Notes to myself</description><atom:link href="http://beenje.github.io/blog/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 18 Sep 2018 20:09:32 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Building a GitLab bot using gidgetlab and aiohttp</title><link>http://beenje.github.io/blog/posts/building-a-gitlab-bot-using-gidgetlab-and-aiohttp/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;At PyCon 2018, &lt;a class="reference external" href="https://github.com/Mariatta"&gt;Mariatta&lt;/a&gt; held a &lt;a class="reference external" href="https://us.pycon.org/2018/schedule/presentation/41/"&gt;Build-a-GitHub-Bot Workshop&lt;/a&gt;. The full
documentation can be found on &lt;a class="reference external" href="https://github.com/Mariatta/github-bot-tutorial"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I went through the tutorial and really enjoyed it.
This is how I discovered &lt;a class="reference external" href="https://gidgethub.readthedocs.io/en/latest/"&gt;gidgethub&lt;/a&gt; from &lt;a class="reference external" href="https://github.com/brettcannon"&gt;Brett Cannon&lt;/a&gt;, an async GitHub
API library for Python.&lt;/p&gt;
&lt;p&gt;I use GitLab at work and really wanted to do the same thing. So I created
&lt;a class="reference external" href="https://gidgetlab.readthedocs.io/en/latest/"&gt;gidgetlab&lt;/a&gt;, a clone of &lt;a class="reference external" href="https://gidgethub.readthedocs.io/en/latest/"&gt;gidgethub&lt;/a&gt; for GitLab.&lt;/p&gt;
&lt;p&gt;In this post I want to demonstrate how to build a GitLab bot in the exact
same way. My goal is not to repeat the full &lt;a class="reference external" href="https://github-bot-tutorial.readthedocs.io/en/latest/"&gt;github-bot-tutorial&lt;/a&gt;
but to show the differences for GitLab. So I strongly suggest that you check the
&lt;a class="reference external" href="https://github-bot-tutorial.readthedocs.io/en/latest/"&gt;github-bot-tutorial&lt;/a&gt; first. I won't go in as much details.&lt;/p&gt;
&lt;p&gt;Note that this post will describe how to interact with gitlab.com but
gidgetlab can of course be used with a private GitLab instance!&lt;/p&gt;
&lt;div class="section" id="using-gidgetlab-on-the-command-line"&gt;
&lt;h2&gt;Using gidgetlab on the command line&lt;/h2&gt;
&lt;p&gt;This is the equivalent of &lt;a class="reference external" href="https://github-bot-tutorial.readthedocs.io/en/latest/gidgethub-cmd-line.html"&gt;using gidgethub on the command line&lt;/a&gt;.
So let's create an issue on GitLab using the API via the command line, instead of the GitLab website.&lt;/p&gt;
&lt;div class="section" id="install-gidgetlab-and-aiohttp"&gt;
&lt;h3&gt;Install gidgetlab and aiohttp&lt;/h3&gt;
&lt;p&gt;Install &lt;tt class="docutils literal"&gt;gidgetlab&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt; if you have not already. Using a virtual environment
is recommended.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python3.6 -m pip install gidgetlab[aiohttp]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-gitlab-personal-access-token"&gt;
&lt;h3&gt;Create a GitLab Personal Access Token&lt;/h3&gt;
&lt;p&gt;In order to use GitLab's API, you'll need to create a personal access token
that will be used to authenticate yourself to GitLab.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Go to &lt;a class="reference external" href="https://gitlab.com/profile/personal_access_tokens"&gt;https://gitlab.com/profile/personal_access_tokens&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or, from GitLab, go to your &lt;a class="reference external" href="https://gitlab.com/profile"&gt;Settings&lt;/a&gt; &amp;gt; &lt;a class="reference external" href="https://gitlab.com/profile/personal_access_tokens"&gt;Access Tokens&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Under &lt;tt class="docutils literal"&gt;Name&lt;/tt&gt;, enter a short description, to identify the purpose
of this token. I recommend something like: &lt;tt class="docutils literal"&gt;bot tutorial&lt;/tt&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic" start="4"&gt;
&lt;li&gt;&lt;p class="first"&gt;Under Scopes, check the &lt;tt class="docutils literal"&gt;api&lt;/tt&gt; scope.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Click &lt;tt class="docutils literal"&gt;Create personal access token&lt;/tt&gt;. You will see your new personal access token
(a 21 characters string). Click on the copy to clipboard icon and and paste it locally
in a text file for now. If you have a password manager like 1password, use that.&lt;/p&gt;
&lt;p&gt;This is the only time you'll see this token in GitLab. If you lose it, you'll
need to revoke it and create another one.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="store-the-personal-access-token-as-an-environment-variable"&gt;
&lt;h3&gt;Store the Personal Access Token as an environment variable&lt;/h3&gt;
&lt;p&gt;In Unix / Mac OS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
export GL_ACCESS_TOKEN=your token
&lt;/pre&gt;
&lt;p&gt;In Windows:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set GL_ACCESS_TOKEN=your token
&lt;/pre&gt;
&lt;p&gt;Note that these will only set the token for the current process. If you want
this value stored permanently, you have to edit the bashrc file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-an-issue"&gt;
&lt;h3&gt;Create an issue&lt;/h3&gt;
&lt;p&gt;Open a new file, for example &lt;tt class="docutils literal"&gt;create_issue.py&lt;/tt&gt; in your favorite editor.&lt;/p&gt;
&lt;p&gt;Copy the following into &lt;tt class="docutils literal"&gt;create_issue.py&lt;/tt&gt;.
Instead of "beenje" however, use your own GitLab username:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import asyncio
import os
import aiohttp
from gidgetlab.aiohttp import GitLabAPI

async def main():
    async with aiohttp.ClientSession() as session:
        gl = GitLabAPI(session, "beenje", access_token=os.getenv("GL_ACCESS_TOKEN"))

loop = asyncio.get_event_loop()
loop.run_until_complete(main())
&lt;/pre&gt;
&lt;p&gt;We only instantiate a GitLabAPI class from gidgetlab by passing who we are ("beenje" in this example)
and our GitLab personal access token stored in the &lt;tt class="docutils literal"&gt;GL_ACCESS_TOKEN&lt;/tt&gt; environment variable.
Note that to interact with a private GitLab instance, you just have to pass the url to GitLabAPI:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
gl = GitLabAPI(session, "beenje", access_token=os.getenv("GL_ACCESS_TOKEN"),
               url="https://mygitlab.example.com")
&lt;/pre&gt;
&lt;p&gt;By default, the url is set to &lt;cite&gt;https://gitlab.com&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;So let's create an issue in one of my personal repo.
Take a look at GitLab's documentation for &lt;a class="reference external" href="https://docs.gitlab.com/ee/api/issues.html#new-issue"&gt;creating a new issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To create an issue, you should make a &lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; request to the url
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/projects/:id/issues&lt;/span&gt;&lt;/tt&gt; and supply the parameters &lt;tt class="docutils literal"&gt;title&lt;/tt&gt; (required)
and &lt;tt class="docutils literal"&gt;description&lt;/tt&gt;.
The &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; can be the project ID or &lt;a class="reference external" href="https://docs.gitlab.com/ee/api/README.html#namespaced-path-encoding"&gt;URL-encoded path of the project&lt;/a&gt; owned by the authenticated user.&lt;/p&gt;
&lt;p&gt;With gidgetlab, this looks like the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
await gl.post(
    "/projects/beenje%2Fstrange-relationship/issues",
    data={
        "title": "We got a problem",
        "description": "Use more emoji!",
    })
&lt;/pre&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;beenje%2Fstrange-relationship&lt;/span&gt;&lt;/tt&gt; is the &lt;a class="reference external" href="https://docs.gitlab.com/ee/api/README.html#namespaced-path-encoding"&gt;URL-encoded path of the project&lt;/a&gt;. We could have used the id &lt;tt class="docutils literal"&gt;7898119&lt;/tt&gt; instead.
The project ID can be found on the project main page.&lt;/p&gt;
&lt;p&gt;Add the above code right after you instantiate GitLabAPI.
Your file should now look like the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import asyncio
import os
import aiohttp
from gidgetlab.aiohttp import GitLabAPI


async def main():
    async with aiohttp.ClientSession() as session:
        gl = GitLabAPI(session, "beenje", access_token=os.getenv("GL_ACCESS_TOKEN"))
        await gl.post(
            "/projects/beenje%2Fstrange-relationship/issues",
            data={
                "title": "We got a problem",
                "description": "Use more emoji!",
            })


loop = asyncio.get_event_loop()
loop.run_until_complete(main())
&lt;/pre&gt;
&lt;p&gt;Feel free to change the title and the body of the message.
Save and run it in the command line:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python3.6 -m create_issue
&lt;/pre&gt;
&lt;p&gt;There should be a new issue created in the strange-relationship project. Check it out:
&lt;a class="reference external" href="https://gitlab.com/beenje/strange-relationship/issues"&gt;https://gitlab.com/beenje/strange-relationship/issues&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comment-on-issue"&gt;
&lt;h3&gt;Comment on issue&lt;/h3&gt;
&lt;p&gt;Let's try a different exercise, to get ourselves more familiar with GitLab's API.
Take a look at GitLab's &lt;a class="reference external" href="https://docs.gitlab.com/ee/api/issues.html#comments-on-issues"&gt;create a comment&lt;/a&gt; documentation: &lt;tt class="docutils literal"&gt;POST &lt;span class="pre"&gt;/projects/:id/issues/:issue_iid/notes&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Leave a comment in the issue you just created:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
await gl.post(
    "/projects/beenje%2Fstrange-relationship/issues/1/notes",
    data={"body": "This is a comment"},
)
&lt;/pre&gt;
&lt;p&gt;Replace &lt;tt class="docutils literal"&gt;1&lt;/tt&gt; with the issue number you created.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="close-the-issue"&gt;
&lt;h3&gt;Close the issue&lt;/h3&gt;
&lt;p&gt;Let's now close the issue that you've just created.&lt;/p&gt;
&lt;p&gt;Take a look at the documentation to &lt;a class="reference external" href="https://docs.gitlab.com/ee/api/issues.html#edit-issue"&gt;edit an issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The method for editing an issue is &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; instead of &lt;tt class="docutils literal"&gt;POST&lt;/tt&gt;, which we've
seen in the previous two examples. In addition, to close an issue, you're basically
editing an issue, and setting the &lt;tt class="docutils literal"&gt;state_event&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;close&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Use gidgetlab to close the issue:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
await gl.put(
    "/projects/beenje%2Fstrange-relationship/issues/1",
    data={"state_event": "close"},
)
&lt;/pre&gt;
&lt;p&gt;Replace &lt;tt class="docutils literal"&gt;1&lt;/tt&gt; with the issue number you created.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="using-gidgetlab-to-respond-to-webhooks"&gt;
&lt;h2&gt;Using gidgetlab to respond to webhooks&lt;/h2&gt;
&lt;p&gt;In the previous example, we've been interacting with GitLab by doing actions:
making requests to GitLab. And we've been doing that locally on our own machine.&lt;/p&gt;
&lt;p&gt;In this section we'll use what we know so far and start building an actual bot:
a webserver that responds to GitLab webhook events.&lt;/p&gt;
&lt;div class="section" id="gitlabbot"&gt;
&lt;h3&gt;GitLabBot&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gidgetlab.readthedocs.io/en/latest/"&gt;gidgetlab&lt;/a&gt; actually provides a &lt;a class="reference external" href="https://gidgetlab.readthedocs.io/en/latest/aiohttp.html"&gt;GitLabBot class&lt;/a&gt; to easily create an aiohttp
web server that reponds to GitLab webhooks.&lt;/p&gt;
&lt;p&gt;Save the following in a file named &lt;tt class="docutils literal"&gt;bot.py&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
from gidgetlab.aiohttp import GitLabBot

bot = GitLabBot("beenje")


if __name__ == "__main__":
    bot.run()
&lt;/pre&gt;
&lt;p&gt;And run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python3 bot.py
======== Running on http://0.0.0.0:8080 ========
(Press CTRL+C to quit)
&lt;/pre&gt;
&lt;p&gt;That's it. You have an aiohttp web server running on port 8080.
Of course, it won't do that much. You'll have to register some events if
you want the bot to perform some actions. We'll see that later.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="webhook-events"&gt;
&lt;h3&gt;Webhook events&lt;/h3&gt;
&lt;p&gt;When an event is triggered in GitLab, GitLab can notify you about the event by
sending a POST request along with the payload.&lt;/p&gt;
&lt;p&gt;Some example &lt;tt class="docutils literal"&gt;events&lt;/tt&gt; are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Issues events: any time an issue is created or an existing issue was updated/closed/reopened&lt;/li&gt;
&lt;li&gt;Push events: when you push to the repository except when pushing tags&lt;/li&gt;
&lt;li&gt;Tag events: when you create (or delete) tags to the repository&lt;/li&gt;
&lt;li&gt;Build events: triggered on status change of a Build&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The complete list of events is listed &lt;a class="reference external" href="https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#events"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since GitLab needs to send you POST requests for the webhook, you should have a service running somewhere that GitLab can reach.
That's usually not on your laptop.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://github-bot-tutorial.readthedocs.io/en/latest/index.html"&gt;GitHub bot tutorial&lt;/a&gt; describes how to &lt;a class="reference external" href="http://github-bot-tutorial.readthedocs.io/en/latest/gidgethub-for-webhooks.html#deploy-to-heroku"&gt;deploy your webservice to Heroku&lt;/a&gt;.
Heroku is a platform as a service and makes it easy to deploy and run your app in the cloud.
There are alternatives and you can of course use on your own servers if you want.&lt;/p&gt;
&lt;p&gt;For testing purpose, you can actually use your own laptop thanks to &lt;a class="reference external" href="https://ngrok.com"&gt;ngrok&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ngrok"&gt;
&lt;h3&gt;Ngrok&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://ngrok.com"&gt;Ngrok&lt;/a&gt; exposes local servers behind NATs and firewalls to the public internet over secure tunnels.
It's an easy way to test locally a webservice.&lt;/p&gt;
&lt;p&gt;Check the installation instructions from the &lt;a class="reference external" href="https://ngrok.com/download"&gt;website&lt;/a&gt;.
Note that for simple tests, you don't have to register an account.&lt;/p&gt;
&lt;p&gt;If you have a webserver running locally on port 8080, you can expose it by running:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ngrok http 8080
&lt;/pre&gt;
&lt;p&gt;Something similar will appear:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ngrok by @inconshreveable                                       (Ctrl+C to quit)

Session Status                online
Session Expires               7 hours, 59 minutes
Version                       2.2.8
Region                        United States (us)
Web Interface                 http://127.0.0.1:4040
Forwarding                    http://fb7fec7c.ngrok.io -&amp;gt; localhost:8080
Forwarding                    https://fb7fec7c.ngrok.io -&amp;gt; localhost:8080
&lt;/pre&gt;
&lt;p&gt;You can access your local webservice using HTTP and even HTTPS!&lt;/p&gt;
&lt;pre class="literal-block"&gt;
curl -X GET https://fb7fec7c.ngrok.io
&lt;/pre&gt;
&lt;p&gt;This address can be accessed from anywhere!. You could give it to a friend or use it as a GitLab webhook.&lt;/p&gt;
&lt;p&gt;Ngrok even gives you a web interface on the port 4040 that allows you to inspect all the requests made to the service.
Just open &lt;a class="reference external" href="http://127.0.0.1:4040"&gt;http://127.0.0.1:4040&lt;/a&gt; in your browser.&lt;/p&gt;
&lt;img alt="/images/gitlab-bot/ngrok-web-ui.png" src="http://beenje.github.io/blog/images/gitlab-bot/ngrok-web-ui.png"&gt;
&lt;p&gt;If your bot is still running and you tried to send a GET, you should get a
405 as reply. Only POST methods are handled by the bot.&lt;/p&gt;
&lt;p&gt;If you don't have any service listening on port 8080 and try to access the
URL given by ngrok, you'll get a 502.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="add-the-gitlab-webhook"&gt;
&lt;h3&gt;Add the GitLab Webhook&lt;/h3&gt;
&lt;p&gt;Now that we have a local webservice that can receive requests thanks to ngrok,
let's create a webhook on GitLab. If you haven't done so yet, create your
own project on GitLab.&lt;/p&gt;
&lt;p&gt;Go to your project settings and select Integrations to create a webhook:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;In the &lt;strong&gt;URL&lt;/strong&gt; field, enter the ngrok URL you got earlier.&lt;/li&gt;
&lt;li&gt;For security reasons, type in some random characters under &lt;strong&gt;Secret Token&lt;/strong&gt; (you can use Python &lt;cite&gt;secrets.token_hex(16)&lt;/cite&gt; function)&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;Trigger&lt;/strong&gt;, select Issues events, Comments and Merge request events&lt;/li&gt;
&lt;li&gt;Leave &lt;strong&gt;Enable SSL verification&lt;/strong&gt; enabled&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Add webhook&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="update-the-config-variables-in-your-environment"&gt;
&lt;h3&gt;Update the Config Variables in your environment&lt;/h3&gt;
&lt;p&gt;First, export the secret webhook token you just created:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
export GL_SECRET=&amp;lt;secret token&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Then, if not already done, export your GitLab personal access token:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
export GL_ACCESS_TOKEN=&amp;lt;acess token&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="your-first-gitlab-bot"&gt;
&lt;h3&gt;Your first GitLab bot!&lt;/h3&gt;
&lt;p&gt;Let's start with a bot that responds to every newly created issue in your project.
For example, whenever someone creates an issue, the bot will automatically say something like:
"Thanks for the report, @user. I will look into this ASAP!"&lt;/p&gt;
&lt;p&gt;To respond to webhooks events, we have to register a coroutine using the
&lt;tt class="docutils literal"&gt;@bot.router.register&lt;/tt&gt; decorator:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
@bot.router.register("Issue Hook", action="open")
async def issue_opened_event(event, gl, *args, **kwargs):
    pass
&lt;/pre&gt;
&lt;p&gt;In this example we subscribe to the GitLab &lt;tt class="docutils literal"&gt;Issue Hook&lt;/tt&gt; events, and
more specifically to the "open" issues event.&lt;/p&gt;
&lt;p&gt;The two important parameters here are: &lt;tt class="docutils literal"&gt;event&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;gl&lt;/tt&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;event&lt;/tt&gt; here is the representation of GitLab's webhook event. We can access the
event payload by doing &lt;tt class="docutils literal"&gt;event.data&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;gl&lt;/tt&gt; is the gidgetlab GitLabAPI instance, which we can use to make API calls to GitLab, as in the first section.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We already saw that to &lt;a class="reference external" href="https://docs.gitlab.com/ee/api/issues.html#comments-on-issues"&gt;create a comment&lt;/a&gt; on an issue, we need to send: &lt;tt class="docutils literal"&gt;POST &lt;span class="pre"&gt;/projects/:id/issues/:issue_iid/notes&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Let's look at the &lt;a class="reference external" href="https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#issues-events"&gt;Issues events&lt;/a&gt;
payload to see how we can retrieve the required information:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{
  "object_kind": "issue",
  "user": {
    "name": "Administrator",
    "username": "root",
    "avatar_url": "http://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=40\u0026d=identicon"
  },
  "project": {
    "id": 1,
    "name":"Gitlab Test",
    "description":"Aut reprehenderit ut est.",
    "web_url":"http://example.com/gitlabhq/gitlab-test",
    "avatar_url":null,
    "git_ssh_url":"git@example.com:gitlabhq/gitlab-test.git",
    "git_http_url":"http://example.com/gitlabhq/gitlab-test.git",
    "namespace":"GitlabHQ",
    ...
  },
  "repository": {
    "name": "Gitlab Test",
    "url": "http://example.com/gitlabhq/gitlab-test.git",
    "description": "Aut reprehenderit ut est.",
    "homepage": "http://example.com/gitlabhq/gitlab-test"
  },
  "object_attributes": {
    "id": 301,
    "title": "New API: create/update/delete file",
    ...
    "state": "opened",
    "iid": 23,
    "url": "http://example.com/diaspora/issues/23",
    "action": "open"
  },
  ...
}
&lt;/pre&gt;
&lt;p&gt;The project id can be retrieved as &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;event.data["project"]["id"]&lt;/span&gt;&lt;/tt&gt;.
As this is quite common, &lt;a class="reference external" href="https://gidgetlab.readthedocs.io/en/latest/"&gt;gidgetlab&lt;/a&gt; procures a &lt;em&gt;project_id&lt;/em&gt; property to access it directly: &lt;tt class="docutils literal"&gt;event.project_id&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;To get the issue id, we can use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;event.data["object_attributes"]["iid"]&lt;/span&gt;&lt;/tt&gt;. Again as accessing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;event.data["object_attributes"]&lt;/span&gt;&lt;/tt&gt; is quite common,
we can use the &lt;em&gt;object_attributes&lt;/em&gt; property: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;event.object_attributes["iid"]&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The url to use is thus:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
url = f"/projects/{event.project_id}/issues/{event.object_attributes['iid']}/notes"
&lt;/pre&gt;
&lt;p&gt;To greet the author, we have to retrieve the username from the event: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;event.data["user"]["username"]&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Open your &lt;tt class="docutils literal"&gt;bot.py&lt;/tt&gt; file and add the following coroutine to be called when
a new issue is opened:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
@bot.router.register("Issue Hook", action="open")
async def issue_opened_event(event, gl, *args, **kwargs):
    """Whenever an issue is opened, greet the author and say thanks."""
    url = f"/projects/{event.project_id}/issues/{event.object_attributes['iid']}/notes"
    message = f"Thanks for the report @{event.data['user']['username']}! I will look into it ASAP! (I'm a bot)."
    await gl.post(url, data={"body": message})
&lt;/pre&gt;
&lt;p&gt;The full file should look like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
from gidgetlab.aiohttp import GitLabBot

bot = GitLabBot("beenje")


@bot.router.register("Issue Hook", action="open")
async def issue_opened_event(event, gl, *args, **kwargs):
    """Whenever an issue is opened, greet the author and say thanks."""
    url = f"/projects/{event.project_id}/issues/{event.object_attributes['iid']}/notes"
    message = f"Thanks for the report @{event.data['user']['username']}! I will look into it ASAP! (I'm a bot)."
    await gl.post(url, data={"body": message})


if __name__ == "__main__":
    bot.run()
&lt;/pre&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python3 bot.py
&lt;/pre&gt;
&lt;p&gt;Go to your project and open an issue. Wait a few seconds and refresh the
page. You should see a new comment added to the issue!&lt;/p&gt;
&lt;img alt="/images/gitlab-bot/gitlab-bot-say-thanks.png" src="http://beenje.github.io/blog/images/gitlab-bot/gitlab-bot-say-thanks.png"&gt;
&lt;p&gt;Congrats! You wrote your first GitLab bot!&lt;/p&gt;
&lt;p&gt;Of course, using ngrok on your laptop was for testing only.
To use it in production, you should deploy it to a server or the cloud.
You can check the GitHub bot tutorial to see how to &lt;a class="reference external" href="http://github-bot-tutorial.readthedocs.io/en/latest/gidgethub-for-webhooks.html#deploy-to-heroku"&gt;deploy your webservice to Heroku&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Hopefully this gave you an idea of what can be done with &lt;a class="reference external" href="https://gidgetlab.readthedocs.io/en/latest/"&gt;gidgetlab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested, try to perform the other exercices described in the
&lt;a class="reference external" href="https://github-bot-tutorial.readthedocs.io/en/latest/"&gt;github-bot-tutorial&lt;/a&gt; but using GitLab. Don't hesitate to let me know if you use &lt;a class="reference external" href="https://gidgetlab.readthedocs.io/en/latest/"&gt;gidgetlab&lt;/a&gt;
to build something cool :-)&lt;/p&gt;
&lt;p&gt;Again, a big thanks to &lt;a class="reference external" href="https://github.com/Mariatta"&gt;Mariatta&lt;/a&gt; for her tutorial and to &lt;a class="reference external" href="https://github.com/brettcannon"&gt;Brett Cannon&lt;/a&gt; for
&lt;a class="reference external" href="https://gidgethub.readthedocs.io/en/latest/"&gt;gidgethub&lt;/a&gt;! This project wouldn't exist otherwise.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>aiohttp</category><category>bot</category><category>gidgetlab</category><category>gitlab</category><category>python</category><guid>http://beenje.github.io/blog/posts/building-a-gitlab-bot-using-gidgetlab-and-aiohttp/</guid><pubDate>Mon, 17 Sep 2018 20:40:15 GMT</pubDate></item><item><title>Parsing JavaScript rendered pages in Python with pyppeteer</title><link>http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Parsing-JavaScript-rendered-pages-in-Python-with-pyppeteer"&gt;Parsing JavaScript rendered pages in Python with pyppeteer&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#Parsing-JavaScript-rendered-pages-in-Python-with-pyppeteer"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Where-is-my-table?"&gt;Where is my table?&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#Where-is-my-table?"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I already wrote a blog post about &lt;a href="https://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/"&gt;Parsing HTML Tables in Python with pandas&lt;/a&gt;. Using &lt;a href="http://docs.python-requests.org/en/master/"&gt;requests&lt;/a&gt; or even directly &lt;a href="https://pandas.pydata.org"&gt;pandas&lt;/a&gt; was working nicely.&lt;/p&gt;
&lt;p&gt;I wanted to play with some data from a race I recently run: &lt;a href="http://www.lundaloppet.se/info/resultat/"&gt;Lundaloppet&lt;/a&gt;.
The results are available here: &lt;a href="http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25"&gt;http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25&lt;/a&gt;
&lt;img src="http://beenje.github.io/blog/images/pyppeteer/results_lundaloppet_2018.png" alt="Results Lundaloppet 2018"&gt;&lt;/p&gt;
&lt;p&gt;Let's try to get that table!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_text output_error"&gt;
&lt;pre&gt;
&lt;span class="ansi-red-fg"&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="ansi-red-fg"&gt;ValueError&lt;/span&gt;                                Traceback (most recent call last)
&lt;span class="ansi-green-fg"&gt;&amp;lt;ipython-input-2-881110a1fe3d&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;&amp;lt;module&amp;gt;&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;()&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;----&amp;gt; 1&lt;/span&gt;&lt;span class="ansi-red-fg"&gt; &lt;/span&gt;dfs &lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt; pd&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;read_html&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;

&lt;span class="ansi-green-fg"&gt;~/miniconda3/envs/notebook/lib/python3.6/site-packages/pandas/io/html.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;read_html&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;(io, match, flavor, header, index_col, skiprows, attrs, parse_dates, tupleize_cols, thousands, encoding, decimal, converters, na_values, keep_default_na, displayed_only)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    985&lt;/span&gt;                   decimal&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;decimal&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; converters&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;converters&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; na_values&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;na_values&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    986&lt;/span&gt;                   keep_default_na&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;keep_default_na&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;--&amp;gt; 987&lt;/span&gt;&lt;span class="ansi-red-fg"&gt;                   displayed_only=displayed_only)
&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;~/miniconda3/envs/notebook/lib/python3.6/site-packages/pandas/io/html.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;_parse&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;(flavor, io, match, attrs, encoding, displayed_only, **kwargs)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    813&lt;/span&gt;             &lt;span class="ansi-green-fg"&gt;break&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    814&lt;/span&gt;     &lt;span class="ansi-green-fg"&gt;else&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;--&amp;gt; 815&lt;/span&gt;&lt;span class="ansi-red-fg"&gt;         &lt;/span&gt;raise_with_traceback&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;retained&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    816&lt;/span&gt; 
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    817&lt;/span&gt;     ret &lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt; &lt;span class="ansi-blue-fg"&gt;[&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;]&lt;/span&gt;

&lt;span class="ansi-green-fg"&gt;~/miniconda3/envs/notebook/lib/python3.6/site-packages/pandas/compat/__init__.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;raise_with_traceback&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;(exc, traceback)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    401&lt;/span&gt;         &lt;span class="ansi-green-fg"&gt;if&lt;/span&gt; traceback &lt;span class="ansi-blue-fg"&gt;==&lt;/span&gt; Ellipsis&lt;span class="ansi-blue-fg"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    402&lt;/span&gt;             _&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; _&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; traceback &lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt; sys&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;exc_info&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;--&amp;gt; 403&lt;/span&gt;&lt;span class="ansi-red-fg"&gt;         &lt;/span&gt;&lt;span class="ansi-green-fg"&gt;raise&lt;/span&gt; exc&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;with_traceback&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;traceback&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    404&lt;/span&gt; &lt;span class="ansi-green-fg"&gt;else&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    405&lt;/span&gt;     &lt;span class="ansi-red-fg"&gt;# this version of raise is a syntax error in Python 3&lt;/span&gt;

&lt;span class="ansi-red-fg"&gt;ValueError&lt;/span&gt;: No tables found&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;No tables found... So what is going on? Let's look at what is returned by requests.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;display_html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[4]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;'ï»¿&amp;lt;!DOCTYPE html&amp;gt;\r\n&amp;lt;html xmlns="http://www.w3.org/1999/xhtml" ng-app="app"&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title ng-bind="event.name || \'Neptron Timing\'"&amp;gt;Neptron Timing&amp;lt;/title&amp;gt;\r\n\r\n    &amp;lt;meta charset="utf-8"&amp;gt;\r\n    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;\r\n    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1"&amp;gt;\r\n    &amp;lt;meta name="description" content="Neptron Timing event results"&amp;gt;\r\n\r\n    &amp;lt;link rel="shortcut icon" href="favicon.ico"&amp;gt;\r\n    &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css"&amp;gt;\r\n    &amp;lt;link rel="stylesheet" href="content/app.min.css"&amp;gt;\r\n    &amp;lt;script src="scripts/iframeResizer.contentWindow.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.35.0/es6-shim.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.8/angular.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.8/angular-route.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.0.2/Chart.min.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7OPJoYN6W9qUHU1L_fEr_5ut8tQN8r2A"&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;div class="navbar navbar-inverse navbar-static-top" role="navigation"&amp;gt;\r\n        &amp;lt;div class="container"&amp;gt;\r\n            &amp;lt;div class="navbar-header"&amp;gt;\r\n                &amp;lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&amp;gt;\r\n                    &amp;lt;span class="sr-only"&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;\r\n                    &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;\r\n                    &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;\r\n                    &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;\r\n                &amp;lt;/button&amp;gt;\r\n                &amp;lt;a class="navbar-brand" href="#"&amp;gt;Neptron Timing&amp;lt;/a&amp;gt;\r\n            &amp;lt;/div&amp;gt;\r\n            &amp;lt;div class="collapse navbar-collapse"&amp;gt;\r\n                &amp;lt;ul class="nav navbar-nav"&amp;gt;\r\n                    &amp;lt;li&amp;gt;&amp;lt;a href="#/"&amp;gt;Events&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id"&amp;gt;&amp;lt;a href="#/{{event.id}}/event"&amp;gt;Info&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id"&amp;gt;&amp;lt;a href="#/{{event.id}}/results"&amp;gt;Results&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id"&amp;gt;&amp;lt;a href="#/{{event.id}}/leaderboard"&amp;gt;Leaderboard&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id &amp;amp;&amp;amp; event.tracking"&amp;gt;&amp;lt;a href="#/{{event.id}}/tracking"&amp;gt;Tracking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id"&amp;gt;&amp;lt;a href="#/{{event.id}}/favorites"&amp;gt;Favorites&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id &amp;amp;&amp;amp; event.sprints.length &amp;gt; 0"&amp;gt;&amp;lt;a href="#/{{event.id}}/sprint"&amp;gt;Sprint&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                    &amp;lt;li ng-show="event.id &amp;amp;&amp;amp; event.teamCompetitions.length &amp;gt; 0"&amp;gt;&amp;lt;a href="#/{{event.id}}/teams"&amp;gt;Teams&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n                &amp;lt;/ul&amp;gt;\r\n            &amp;lt;/div&amp;gt;&amp;lt;!--/.nav-collapse --&amp;gt;\r\n        &amp;lt;/div&amp;gt;\r\n    &amp;lt;/div&amp;gt;\r\n  &amp;lt;script type="text/javascript"&amp;gt;\r\n\r\nvar fixLidingloppetMessage = function() {\r\n\tvar str = window.location.href || \'\';\r\n\tvar cssStyle = (str.match(\'lidingolor2017\') ? \'\' : \'none\');\r\n\t//console.log(\'changed: \'+str, cssStyle);\r\n\t$(\'#nytamin-fix\').css(\'display\', cssStyle);\r\n}\r\n$(window).bind(\'hashchange\', function() {\r\n\tfixLidingloppetMessage();\r\n});\r\nwindow.setInterval(fixLidingloppetMessage, 1000);\r\n\r\n&amp;lt;/script&amp;gt;\r\n\r\n&amp;lt;div class="container-fluid"&amp;gt;\r\n\t&amp;lt;div id="nytamin-fix" class="panel panel-primary" style="display: none; margin: 2em;"&amp;gt;\r\n\t  &amp;lt;div class="panel-heading"&amp;gt;Liding&amp;amp;ouml;loppet.se&amp;lt;/div&amp;gt;\r\n\t  &amp;lt;div class="panel-body"&amp;gt;\r\n\t\t\r\n\t\t&amp;lt;strong&amp;gt;&amp;lt;a href="http://213.39.39.152"&amp;gt;Click here to get back to Liding&amp;amp;ouml;loppet\'s homepage!&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt;\r\n\r\n\t  &amp;lt;/div&amp;gt;\r\n\t&amp;lt;/div&amp;gt;\r\n&amp;lt;/div&amp;gt;\r\n    &amp;lt;div class="container-fluid" ng-view&amp;gt;&amp;lt;/div&amp;gt;\r\n  &amp;lt;div class="nt-app-links" style="margin:10px 20px"&amp;gt;\r\n    &amp;lt;a href="https://www.raceone.com/redirect" id="download-icon-footer-ios" target="_blank"&amp;gt;\r\n      &amp;lt;img class="download-icon" src="https://www.raceone.com/wp-content/uploads/2016/09/app-store-e1475238488598.png" alt=""&amp;gt;\r\n    &amp;lt;/a&amp;gt;\r\n    &amp;lt;a href="https://www.raceone.com/redirect" id="download-icon-footer-android" target="_blank"&amp;gt;\r\n      &amp;lt;img class="download-icon" src="https://www.raceone.com/wp-content/uploads/2016/09/google-play-e1475238513871.png" alt=""&amp;gt;\r\n    &amp;lt;/a&amp;gt;\r\n  &amp;lt;/div&amp;gt;\r\n\r\n    &amp;lt;script type="text/javascript" src="scripts/app.js"&amp;gt;&amp;lt;/script&amp;gt;\r\n\r\n    &amp;lt;!-- AddThis Button BEGIN --&amp;gt;\r\n    &amp;lt;div class="addthis_toolbox addthis_default_style addthis_32x32_style"&amp;gt;\r\n        &amp;lt;a class="addthis_button_facebook"&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a class="addthis_button_twitter"&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a class="addthis_button_linkedin"&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a class="addthis_button_email"&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a class="addthis_button_print"&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a class="addthis_button_textme"&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a class="addthis_button_compact"&amp;gt;&amp;lt;/a&amp;gt;\r\n    &amp;lt;/div&amp;gt;\r\n    &amp;lt;script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5364e093794f9d2f"&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;!-- AddThis Button END --&amp;gt;\r\n\r\n    &amp;lt;!--&amp;lt;div class="applinks"&amp;gt;\r\n        &amp;lt;a href="https://itunes.apple.com/se/app/neptron-timing/id709776903" target="_blank"&amp;gt;&amp;lt;img class="appstore" alt="Get it on iTunes" src="content/appstore.svg" /&amp;gt;&amp;lt;/a&amp;gt;\r\n        &amp;lt;a href="https://play.google.com/store/apps/details?id=se.neptron.timing" target="_blank"&amp;gt;&amp;lt;img class="playstore" alt="Get it on Google Play" src="content/playstore.png" /&amp;gt;&amp;lt;/a&amp;gt;\r\n    &amp;lt;/div&amp;gt;--&amp;gt;\r\n\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n'&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;display_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea "&gt;
ï»¿


    &lt;title ng-bind="event.name || 'Neptron Timing'"&gt;Neptron Timing&lt;/title&gt;

    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta name="description" content="Neptron Timing event results"&gt;

    &lt;link rel="shortcut icon" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/favicon.ico"&gt;
    &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css"&gt;
    &lt;link rel="stylesheet" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/content/app.min.css"&gt;
    &lt;script src="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/scripts/iframeResizer.contentWindow.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.35.0/es6-shim.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.8/angular.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.8/angular-route.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.0.2/Chart.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7OPJoYN6W9qUHU1L_fEr_5ut8tQN8r2A"&gt;&lt;/script&gt;


    &lt;div class="navbar navbar-inverse navbar-static-top" role="navigation"&gt;
        &lt;div class="container"&gt;
            &lt;div class="navbar-header"&gt;
                &lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&gt;
                    &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;/button&gt;
                &lt;a class="navbar-brand" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/"&gt;Neptron Timing&lt;/a&gt;
            &lt;/div&gt;
            &lt;div class="collapse navbar-collapse"&gt;
                &lt;ul class="nav navbar-nav"&gt;
                    &lt;li&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/"&gt;Events&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/event"&gt;Info&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/results"&gt;Results&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/leaderboard"&gt;Leaderboard&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id &amp;amp;&amp;amp; event.tracking"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/tracking"&gt;Tracking&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/favorites"&gt;Favorites&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id &amp;amp;&amp;amp; event.sprints.length &amp;gt; 0"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/sprint"&gt;Sprint&lt;/a&gt;&lt;/li&gt;
                    &lt;li ng-show="event.id &amp;amp;&amp;amp; event.teamCompetitions.length &amp;gt; 0"&gt;&lt;a href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#/%7B%7Bevent.id%7D%7D/teams"&gt;Teams&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;&lt;!--/.nav-collapse --&gt;
        &lt;/div&gt;
    &lt;/div&gt;
  &lt;script type="text/javascript"&gt;

var fixLidingloppetMessage = function() {
	var str = window.location.href || '';
	var cssStyle = (str.match('lidingolor2017') ? '' : 'none');
	//console.log('changed: '+str, cssStyle);
	$('#nytamin-fix').css('display', cssStyle);
}
$(window).bind('hashchange', function() {
	fixLidingloppetMessage();
});
window.setInterval(fixLidingloppetMessage, 1000);

&lt;/script&gt;

&lt;div class="container-fluid"&gt;
	&lt;div id="nytamin-fix" class="panel panel-primary" style="display: none; margin: 2em;"&gt;
	  &lt;div class="panel-heading"&gt;Lidingöloppet.se&lt;/div&gt;
	  &lt;div class="panel-body"&gt;
		
		&lt;strong&gt;&lt;a href="http://213.39.39.152"&gt;Click here to get back to Lidingöloppet's homepage!&lt;/a&gt;&lt;/strong&gt;

	  &lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
    &lt;div class="container-fluid" ng-view&gt;&lt;/div&gt;
  &lt;div class="nt-app-links" style="margin:10px 20px"&gt;
    &lt;a href="https://www.raceone.com/redirect" id="download-icon-footer-ios" target="_blank"&gt;
      &lt;img class="download-icon" src="https://www.raceone.com/wp-content/uploads/2016/09/app-store-e1475238488598.png" alt=""&gt;
    &lt;/a&gt;
    &lt;a href="https://www.raceone.com/redirect" id="download-icon-footer-android" target="_blank"&gt;
      &lt;img class="download-icon" src="https://www.raceone.com/wp-content/uploads/2016/09/google-play-e1475238513871.png" alt=""&gt;
    &lt;/a&gt;
  &lt;/div&gt;

    &lt;script type="text/javascript" src="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/scripts/app.js"&gt;&lt;/script&gt;

    &lt;!-- AddThis Button BEGIN --&gt;
    &lt;div class="addthis_toolbox addthis_default_style addthis_32x32_style"&gt;
        &lt;a class="addthis_button_facebook"&gt;&lt;/a&gt;
        &lt;a class="addthis_button_twitter"&gt;&lt;/a&gt;
        &lt;a class="addthis_button_linkedin"&gt;&lt;/a&gt;
        &lt;a class="addthis_button_email"&gt;&lt;/a&gt;
        &lt;a class="addthis_button_print"&gt;&lt;/a&gt;
        &lt;a class="addthis_button_textme"&gt;&lt;/a&gt;
        &lt;a class="addthis_button_compact"&gt;&lt;/a&gt;
    &lt;/div&gt;
    &lt;script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5364e093794f9d2f"&gt;&lt;/script&gt;
    &lt;!-- AddThis Button END --&gt;

    &lt;!--&lt;div class="applinks"&gt;
        &lt;a href="https://itunes.apple.com/se/app/neptron-timing/id709776903" target="_blank"&gt;&lt;img class="appstore" alt="Get it on iTunes" src="content/appstore.svg" /&gt;&lt;/a&gt;
        &lt;a href="https://play.google.com/store/apps/details?id=se.neptron.timing" target="_blank"&gt;&lt;img class="playstore" alt="Get it on Google Play" src="content/playstore.png" /&gt;&lt;/a&gt;
    &lt;/div&gt;--&gt;




&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;There is no table in the HTML sent by the server.
The table is rendered on the client side by AngularJS. We can check that by looking at the page source in Chrome:
&lt;img src="http://beenje.github.io/blog/images/pyppeteer/results_lundaloppet_2018_source.png" alt="Results Lundaloppet 2018 source"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;How do you parse JavaScript rendered page in Python? Don't we need a browser to run the JavaScript code?
By googling, I found &lt;a href="https://github.com/kennethreitz/requests-html"&gt;Requests-HTML&lt;/a&gt; that has JavaScript support!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Requests-HTML"&gt;Requests-HTML&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#Requests-HTML"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;requests_html&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTMLSession&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HTMLSession&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'table'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;display_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th class="res-favorite"&gt; &lt;/th&gt;
                        &lt;!-- ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-placeByRace " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Place&lt;br&gt;(race)&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-placeByCategory " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Place&lt;br&gt;(cat)&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-startNo " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Bib no&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-category " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Category&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-name " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Name&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-flag " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-association " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Association&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-lastSplitPoint " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Progress&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-time " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Time&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;&lt;th class="res-status " ng-repeat="item in vm.resultsHeader"&gt;&lt;span ng-bind-html="item.value" class="ng-binding"&gt;Status&lt;/span&gt;&lt;/th&gt;&lt;!-- end ngRepeat: item in vm.resultsHeader --&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    &lt;!-- ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="1" class="ng-binding"&gt;1&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="1" class="ng-binding"&gt;1&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6922" class="ng-binding"&gt;6922&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Hans Larsson" class="ng-binding"&gt;Hans Larsson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="MAI" class="ng-binding"&gt;MAI&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="33:22" class="ng-binding"&gt;33:22&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="2" class="ng-binding"&gt;2&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="2" class="ng-binding"&gt;2&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6514" class="ng-binding"&gt;6514&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Filip Helmroth" class="ng-binding"&gt;Filip Helmroth&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="IK Lerum Friidrott" class="ng-binding"&gt;IK Lerum Friidrott&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="33:37" class="ng-binding"&gt;33:37&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3" class="ng-binding"&gt;3&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3" class="ng-binding"&gt;3&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3920" class="ng-binding"&gt;3920&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="David Hartman" class="ng-binding"&gt;David Hartman&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Björnstorps IF" class="ng-binding"&gt;Björnstorps IF&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="33:39" class="ng-binding"&gt;33:39&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="4" class="ng-binding"&gt;4&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="4" class="ng-binding"&gt;4&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3926" class="ng-binding"&gt;3926&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Henrik Orre" class="ng-binding"&gt;Henrik Orre&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Björnstorps IF" class="ng-binding"&gt;Björnstorps IF&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="34:24" class="ng-binding"&gt;34:24&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5" class="ng-binding"&gt;5&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5" class="ng-binding"&gt;5&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="2666" class="ng-binding"&gt;2666&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Jesper Bokefors" class="ng-binding"&gt;Jesper Bokefors&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Malmö AI" class="ng-binding"&gt;Malmö AI&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="34:51" class="ng-binding"&gt;34:51&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6" class="ng-binding"&gt;6&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6" class="ng-binding"&gt;6&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5729" class="ng-binding"&gt;5729&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Juan Negreira" class="ng-binding"&gt;Juan Negreira&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds universitet" class="ng-binding"&gt;Lunds universitet&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="35:19" class="ng-binding"&gt;35:19&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="7" class="ng-binding"&gt;7&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="7" class="ng-binding"&gt;7&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3649" class="ng-binding"&gt;3649&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Jim Webb" class="ng-binding"&gt;Jim Webb&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="   " class="ng-binding"&gt;   &lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="35:23" class="ng-binding"&gt;35:23&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="8" class="ng-binding"&gt;8&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="8" class="ng-binding"&gt;8&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3675" class="ng-binding"&gt;3675&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Nils Wetterberg" class="ng-binding"&gt;Nils Wetterberg&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Ekmans Löpare i Lund" class="ng-binding"&gt;Ekmans Löpare i Lund&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="35:39" class="ng-binding"&gt;35:39&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="9" class="ng-binding"&gt;9&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="9" class="ng-binding"&gt;9&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="4880" class="ng-binding"&gt;4880&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Hannes Hjalmarsson" class="ng-binding"&gt;Hannes Hjalmarsson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds kommun" class="ng-binding"&gt;Lunds kommun&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="35:41" class="ng-binding"&gt;35:41&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="10" class="ng-binding"&gt;10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="10" class="ng-binding"&gt;10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6929" class="ng-binding"&gt;6929&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Freyi Karlsson" class="ng-binding"&gt;Freyi Karlsson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Ekmans löpare i lund" class="ng-binding"&gt;Ekmans löpare i lund&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="35:42" class="ng-binding"&gt;35:42&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="11" class="ng-binding"&gt;11&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="11" class="ng-binding"&gt;11&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5995" class="ng-binding"&gt;5995&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Shijie Xu" class="ng-binding"&gt;Shijie Xu&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds universitet" class="ng-binding"&gt;Lunds universitet&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="35:43" class="ng-binding"&gt;35:43&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="12" class="ng-binding"&gt;12&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="12" class="ng-binding"&gt;12&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5276" class="ng-binding"&gt;5276&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Stuart Ansell" class="ng-binding"&gt;Stuart Ansell&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds universitet" class="ng-binding"&gt;Lunds universitet&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:02" class="ng-binding"&gt;36:02&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="13" class="ng-binding"&gt;13&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="13" class="ng-binding"&gt;13&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3917" class="ng-binding"&gt;3917&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Christer Friberg" class="ng-binding"&gt;Christer Friberg&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Björnstorps IF" class="ng-binding"&gt;Björnstorps IF&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:15" class="ng-binding"&gt;36:15&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="14" class="ng-binding"&gt;14&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="14" class="ng-binding"&gt;14&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5647" class="ng-binding"&gt;5647&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Roger Lindskog" class="ng-binding"&gt;Roger Lindskog&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds universitet" class="ng-binding"&gt;Lunds universitet&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:15" class="ng-binding"&gt;36:15&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="15" class="ng-binding"&gt;15&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="15" class="ng-binding"&gt;15&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3616" class="ng-binding"&gt;3616&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Andreas Thell" class="ng-binding"&gt;Andreas Thell&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Ystads IF Friidrott" class="ng-binding"&gt;Ystads IF Friidrott&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:20" class="ng-binding"&gt;36:20&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="16" class="ng-binding"&gt;16&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="16" class="ng-binding"&gt;16&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6382" class="ng-binding"&gt;6382&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Tommy Olofsson" class="ng-binding"&gt;Tommy Olofsson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Tetra Pak IF" class="ng-binding"&gt;Tetra Pak IF&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:20" class="ng-binding"&gt;36:20&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="17" class="ng-binding"&gt;17&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="17" class="ng-binding"&gt;17&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3183" class="ng-binding"&gt;3183&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Kristoffer  Loo" class="ng-binding"&gt;Kristoffer  Loo&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="   " class="ng-binding"&gt;   &lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:36" class="ng-binding"&gt;36:36&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="18" class="ng-binding"&gt;18&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="18" class="ng-binding"&gt;18&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="2664" class="ng-binding"&gt;2664&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Alfred Bodenäs" class="ng-binding"&gt;Alfred Bodenäs&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Triathlon Syd" class="ng-binding"&gt;Triathlon Syd&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:44" class="ng-binding"&gt;36:44&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="19" class="ng-binding"&gt;19&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="19" class="ng-binding"&gt;19&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6979" class="ng-binding"&gt;6979&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Daniel Jonsson" class="ng-binding"&gt;Daniel Jonsson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="   " class="ng-binding"&gt;   &lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:54" class="ng-binding"&gt;36:54&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="20" class="ng-binding"&gt;20&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="20" class="ng-binding"&gt;20&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="4977" class="ng-binding"&gt;4977&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Johan Lindgren" class="ng-binding"&gt;Johan Lindgren&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds kommun" class="ng-binding"&gt;Lunds kommun&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="36:58" class="ng-binding"&gt;36:58&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="21" class="ng-binding"&gt;21&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="21" class="ng-binding"&gt;21&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3495" class="ng-binding"&gt;3495&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Erik Schultz-Eklund" class="ng-binding"&gt;Erik Schultz-Eklund&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Agape Lund" class="ng-binding"&gt;Agape Lund&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="37:20" class="ng-binding"&gt;37:20&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="22" class="ng-binding"&gt;22&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="22" class="ng-binding"&gt;22&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3571" class="ng-binding"&gt;3571&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Daniel Strandberg" class="ng-binding"&gt;Daniel Strandberg&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Malmö AI" class="ng-binding"&gt;Malmö AI&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="37:28" class="ng-binding"&gt;37:28&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="23" class="ng-binding"&gt;23&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="23" class="ng-binding"&gt;23&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="3121" class="ng-binding"&gt;3121&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Martin Larsson" class="ng-binding"&gt;Martin Larsson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="inQore-part of Qgroup" class="ng-binding"&gt;inQore-part of Qgroup&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="37:32" class="ng-binding"&gt;37:32&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope even"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="24" class="ng-binding"&gt;24&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="24" class="ng-binding"&gt;24&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="5955" class="ng-binding"&gt;5955&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Johan Vallon-Christersson" class="ng-binding"&gt;Johan Vallon-Christersson&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Lunds universitet" class="ng-binding"&gt;Lunds universitet&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="37:33" class="ng-binding"&gt;37:33&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;&lt;tr ng-class-odd="'odd'" ng-class-even="'even'" ng-repeat="row in vm.resultsRows" class="ng-scope odd"&gt;
                        &lt;td class="res-favorite"&gt;&lt;div title="Add to favorites" ng-click="vm.toggleFav(row.result)"&gt;&lt;span class="glyphicon glyphicon-star-empty"&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
                        &lt;!-- ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByRace " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="25" class="ng-binding"&gt;25&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-placeByCategory " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="25" class="ng-binding"&gt;25&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-startNo " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="6675" class="ng-binding"&gt;6675&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-category " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="P10" class="ng-binding"&gt;P10&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-name " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Kristian  Haggärde" class="ng-binding"&gt;Kristian  Haggärde&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-flag " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="" class="ng-binding"&gt;&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-association " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Björnstorps IF" class="ng-binding"&gt;Björnstorps IF&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-lastSplitPoint " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finish" class="ng-binding"&gt;Finish&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-time " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="37:34" class="ng-binding"&gt;37:34&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;&lt;td class="res-status " ng-click="vm.openResult(row.result)" ng-repeat="cell in row.cells"&gt;&lt;div data-value="Finished" class="ng-binding"&gt;Finished&lt;/div&gt;&lt;/td&gt;&lt;!-- end ngRepeat: cell in row.cells --&gt;
                    &lt;/tr&gt;&lt;!-- end ngRepeat: row in vm.resultsRows --&gt;
                &lt;/tbody&gt;
            &lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Wow! Isn't that magic? We'll explore a bit later how this works.&lt;/p&gt;
&lt;p&gt;What I want to get is all the results, not just the first 25. I tried increasing the &lt;em&gt;pageSize&lt;/em&gt; passed in the URL, but that didn't help. Even passing a lower value always returns 25 rows. Not sure how the API is implemented...&lt;/p&gt;
&lt;p&gt;An issue I had with requests-html is that sometimes &lt;code&gt;r.html.find('table', first=True)&lt;/code&gt; returned &lt;code&gt;None&lt;/code&gt; or an empty table...&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=63&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'table'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_text output_error"&gt;
&lt;pre&gt;
&lt;span class="ansi-red-fg"&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="ansi-red-fg"&gt;IndexError&lt;/span&gt;                                Traceback (most recent call last)
&lt;span class="ansi-green-fg"&gt;&amp;lt;ipython-input-9-e9d6c036862c&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;&amp;lt;module&amp;gt;&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;()&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;      2&lt;/span&gt; r&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;html&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;render&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;      3&lt;/span&gt; table &lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt; r&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;html&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;find&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;'table'&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; first&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;&lt;span class="ansi-green-fg"&gt;True&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;----&amp;gt; 4&lt;/span&gt;&lt;span class="ansi-red-fg"&gt; &lt;/span&gt;pd&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;read_html&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;table&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;html&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;[&lt;/span&gt;&lt;span class="ansi-cyan-fg"&gt;0&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;]&lt;/span&gt;

&lt;span class="ansi-red-fg"&gt;IndexError&lt;/span&gt;: list index out of range&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;That's probably a timing issue (the rendering might take longer sometimes). I tried playing with the &lt;code&gt;wait&lt;/code&gt; and &lt;code&gt;sleep&lt;/code&gt; arguments of &lt;code&gt;r.html.render(wait=1, sleep=1)&lt;/code&gt; but couldn't make the problem completetly go away. This is an issue because I don't need just one page but 135.&lt;/p&gt;
&lt;p&gt;I started to look at &lt;a href="https://github.com/kennethreitz/requests-html/blob/master/requests_html.py"&gt;requests-html&lt;/a&gt; code to see how this was implemented. That's how I discovered &lt;a href="https://github.com/miyakogi/pyppeteer"&gt;pyppeteer&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Pyppeteer"&gt;Pyppeteer&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#Pyppeteer"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://miyakogi.github.io/pyppeteer/"&gt;Pyppeteer&lt;/a&gt; is an unofficial Python port of &lt;a href="https://github.com/GoogleChrome/puppeteer"&gt;puppeteer&lt;/a&gt; JavaScript (headless) chrome/chromium browser automation library.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Puppeteer is a Node library which provides a high-level API to control headless Chrome or Chromium over the DevTools Protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pyppeteer allows you to do the same from Python.
So there is no &lt;em&gt;magic&lt;/em&gt;. You just let Chromium load and render the page with the latest JavaScript and browser features. This is super powerful.&lt;/p&gt;
&lt;p&gt;The first time you run pyppeteer, it even downloads a recent version of Chromium. So no initial setup is required.&lt;/p&gt;
&lt;p&gt;Pyppeteer is based on &lt;a href="https://docs.python.org/3/library/asyncio.html"&gt;asyncio&lt;/a&gt;. This is hidden by requests-html that gives you a simple interface but of course less flexibility.&lt;/p&gt;
&lt;p&gt;So let's explore pyppeteer. The first example from the documentation is how to take a screenshot of a page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyppeteer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;

&lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://example.com'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'example.png'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's try that with our page. Note that I pass the &lt;code&gt;fullPage&lt;/code&gt; option otherwise the page is cut.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [10]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyppeteer&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pyppeteer_screenshot.png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'fullPage'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Here is the screenshot taken:
&lt;img src="http://beenje.github.io/blog/images/pyppeteer/pyppeteer_screenshot.png" alt="Pyppeteer screenshot"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Nice, no?
This example showed us how to load a page:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a browser&lt;/li&gt;
&lt;li&gt;create a new page&lt;/li&gt;
&lt;li&gt;goto a page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are several functions that can be used to retrieve elements from the page, like &lt;a href="https://miyakogi.github.io/pyppeteer/reference.html#pyppeteer.page.Page.querySelector"&gt;querySelector&lt;/a&gt; or &lt;a href="https://miyakogi.github.io/pyppeteer/reference.html#pyppeteer.page.Page.querySelectorEval"&gt;querySelectorEval&lt;/a&gt;. This is the function we gonna use to retrieve the table. We use the &lt;code&gt;table&lt;/code&gt; selector and apply the &lt;code&gt;outerHTML&lt;/code&gt; function to get the HTML representation of the table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;querySelectorEval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'table'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'(element) =&amp;gt; element.outerHTML'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can then pass that to pandas.&lt;/p&gt;
&lt;p&gt;One thing we wanted is to wait for the table to be rendered before trying to retrieve it. We can use the &lt;a href="https://miyakogi.github.io/pyppeteer/reference.html#pyppeteer.page.Page.waitForSelector"&gt;waitForSelector&lt;/a&gt; function for that.
I initially tried to use the &lt;code&gt;table&lt;/code&gt; selector but that sometimes returned an empty table. So I chose a class of one row element &lt;code&gt;td.res-startNo&lt;/code&gt; to be sure that the table was rendered.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [11]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyppeteer&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/?sortOrder=Place&amp;amp;raceId=99&amp;amp;page=0&amp;amp;pageSize=25'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitForSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'td.res-startNo'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;querySelectorEval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'table'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'(element) =&amp;gt; element.outerHTML'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[11]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Unnamed: 0&lt;/th&gt;
      &lt;th&gt;Place(race)&lt;/th&gt;
      &lt;th&gt;Place(cat)&lt;/th&gt;
      &lt;th&gt;Bib no&lt;/th&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Unnamed: 6&lt;/th&gt;
      &lt;th&gt;Association&lt;/th&gt;
      &lt;th&gt;Progress&lt;/th&gt;
      &lt;th&gt;Time&lt;/th&gt;
      &lt;th&gt;Status&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6922&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Hans Larsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;MAI&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;33:22&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6514&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Filip Helmroth&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;IK Lerum Friidrott&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;33:37&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3920&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;David Hartman&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Björnstorps IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;33:39&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3926&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Henrik Orre&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Björnstorps IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;34:24&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2666&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Jesper Bokefors&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Malmö AI&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;34:51&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;5729&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Juan Negreira&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;35:19&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3649&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Jim Webb&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;35:23&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3675&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Nils Wetterberg&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Ekmans Löpare i Lund&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;35:39&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;4880&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Hannes Hjalmarsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds kommun&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;35:41&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;6929&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Freyi Karlsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Ekmans löpare i lund&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;35:42&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;5995&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Shijie Xu&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;35:43&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;5276&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Stuart Ansell&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:02&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3917&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Christer Friberg&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Björnstorps IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:15&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;5647&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Roger Lindskog&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:15&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;3616&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Andreas Thell&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Ystads IF Friidrott&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:20&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;6382&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Tommy Olofsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Tetra Pak IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:20&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;3183&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Kristoffer Loo&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:36&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;2664&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Alfred Bodenäs&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Triathlon Syd&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:44&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;6979&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Daniel Jonsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:54&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;4977&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Johan Lindgren&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds kommun&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;36:58&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;3495&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Erik Schultz-Eklund&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Agape Lund&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;37:20&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;21&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;3571&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Daniel Strandberg&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Malmö AI&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;37:28&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;22&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;3121&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Martin Larsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;inQore-part of Qgroup&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;37:32&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;23&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;5955&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Johan Vallon-Christersson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;37:33&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;24&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;6675&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Kristian Haggärde&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Björnstorps IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;37:34&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;That's a bit more code than with requests-HTML but we have finer control.
Let's refactor that code to retrieve all the results of the race.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [12]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyppeteer&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;

&lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'http://results.neptron.se/#/lundaloppet2018/results?sortOrder=Place&amp;amp;raceId=99&amp;amp;pageSize=25&amp;amp;page=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Return a page after waiting for the given selector"""&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitForSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_num_pages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Return the total number of pages available"""&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;get_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'div.ng-isolate-scope'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;num_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;querySelectorEval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'div.ng-isolate-scope'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'(element) =&amp;gt; element.getAttribute("data-num-pages")'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page_nb&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Return the table from the given page number as a pandas dataframe"""&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'Get table from page &lt;/span&gt;&lt;span class="si"&gt;{page_nb}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;get_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page_nb&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'td.res-startNo'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;querySelectorEval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'table'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'(element) =&amp;gt; element.outerHTML'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_results&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;"""Return all the results as a pandas dataframe"""&lt;/span&gt;
    &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;num_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;get_num_pages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'Number of pages: &lt;/span&gt;&lt;span class="si"&gt;{num_pages}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Python 3.6 asynchronous comprehensions! Nice!&lt;/span&gt;
    &lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;get_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page_nb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;page_nb&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_pages&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ignore_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This code could be made a bit more generic but that's good enough for what I want.
I think it's quite straightforward. We first get the total number of pages and then load each page to retrieve the table.
Once done, we just have to concatenate all those tables in one.&lt;/p&gt;
&lt;p&gt;One thing to note is the use of Python &lt;a href="https://www.python.org/dev/peps/pep-0530/"&gt;asynchronous comprehensions&lt;/a&gt;. This is a Python 3.6 feature and makes it really Pythonic. It just works as it would with synchronous functions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;get_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page_nb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;page_nb&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_pages&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's run that code!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [13]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_results&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Number of pages: 115
Get table from page 0
Get table from page 1
Get table from page 2
Get table from page 3
Get table from page 4
Get table from page 5
Get table from page 6
Get table from page 7
Get table from page 8
Get table from page 9
Get table from page 10
Get table from page 11
Get table from page 12
Get table from page 13
Get table from page 14
Get table from page 15
Get table from page 16
Get table from page 17
Get table from page 18
Get table from page 19
Get table from page 20
Get table from page 21
Get table from page 22
Get table from page 23
Get table from page 24
Get table from page 25
Get table from page 26
Get table from page 27
Get table from page 28
Get table from page 29
Get table from page 30
Get table from page 31
Get table from page 32
Get table from page 33
Get table from page 34
Get table from page 35
Get table from page 36
Get table from page 37
Get table from page 38
Get table from page 39
Get table from page 40
Get table from page 41
Get table from page 42
Get table from page 43
Get table from page 44
Get table from page 45
Get table from page 46
Get table from page 47
Get table from page 48
Get table from page 49
Get table from page 50
Get table from page 51
Get table from page 52
Get table from page 53
Get table from page 54
Get table from page 55
Get table from page 56
Get table from page 57
Get table from page 58
Get table from page 59
Get table from page 60
Get table from page 61
Get table from page 62
Get table from page 63
Get table from page 64
Get table from page 65
Get table from page 66
Get table from page 67
Get table from page 68
Get table from page 69
Get table from page 70
Get table from page 71
Get table from page 72
Get table from page 73
Get table from page 74
Get table from page 75
Get table from page 76
Get table from page 77
Get table from page 78
Get table from page 79
Get table from page 80
Get table from page 81
Get table from page 82
Get table from page 83
Get table from page 84
Get table from page 85
Get table from page 86
Get table from page 87
Get table from page 88
Get table from page 89
Get table from page 90
Get table from page 91
Get table from page 92
Get table from page 93
Get table from page 94
Get table from page 95
Get table from page 96
Get table from page 97
Get table from page 98
Get table from page 99
Get table from page 100
Get table from page 101
Get table from page 102
Get table from page 103
Get table from page 104
Get table from page 105
Get table from page 106
Get table from page 107
Get table from page 108
Get table from page 109
Get table from page 110
Get table from page 111
Get table from page 112
Get table from page 113
Get table from page 114
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;That's it! We got all the results from the Lundaloppet 2018 in a nice pandas DataFrame.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [14]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[14]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;2872&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [15]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[15]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Unnamed: 0&lt;/th&gt;
      &lt;th&gt;Place(race)&lt;/th&gt;
      &lt;th&gt;Place(cat)&lt;/th&gt;
      &lt;th&gt;Bib no&lt;/th&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Unnamed: 6&lt;/th&gt;
      &lt;th&gt;Association&lt;/th&gt;
      &lt;th&gt;Progress&lt;/th&gt;
      &lt;th&gt;Time&lt;/th&gt;
      &lt;th&gt;Status&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;6922&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Hans Larsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;MAI&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;33:22&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;6514&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Filip Helmroth&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;IK Lerum Friidrott&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;33:37&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;3920&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;David Hartman&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Björnstorps IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;33:39&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;3926&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Henrik Orre&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Björnstorps IF&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;34:24&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;5.0&lt;/td&gt;
      &lt;td&gt;5.0&lt;/td&gt;
      &lt;td&gt;2666&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Jesper Bokefors&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Malmö AI&lt;/td&gt;
      &lt;td&gt;Finish&lt;/td&gt;
      &lt;td&gt;34:51&lt;/td&gt;
      &lt;td&gt;Finished&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [16]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[16]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Unnamed: 0&lt;/th&gt;
      &lt;th&gt;Place(race)&lt;/th&gt;
      &lt;th&gt;Place(cat)&lt;/th&gt;
      &lt;th&gt;Bib no&lt;/th&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Unnamed: 6&lt;/th&gt;
      &lt;th&gt;Association&lt;/th&gt;
      &lt;th&gt;Progress&lt;/th&gt;
      &lt;th&gt;Time&lt;/th&gt;
      &lt;th&gt;Status&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2867&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6855&lt;/td&gt;
      &lt;td&gt;T10&lt;/td&gt;
      &lt;td&gt;porntepin sooksaengprasit&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Not started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2868&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6857&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Gabriel Teku&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Lunds universitet&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Not started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2869&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6888&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Viktor Karlsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Genarps if&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Not started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2870&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6892&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Emil Larsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Not started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2871&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6893&lt;/td&gt;
      &lt;td&gt;P10&lt;/td&gt;
      &lt;td&gt;Göran Larsson&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Not started&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Let's save the result to a csv file&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [17]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'lundaloppet2018.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Summary"&gt;Summary&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/#Summary"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;With frameworks like &lt;a href="https://angularjs.org"&gt;AngularJS&lt;/a&gt;, &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt;, &lt;a href="https://vuejs.org"&gt;Vue.js&lt;/a&gt;... more and more websites use client-side rendering. To parse those websites, you can't just request HTML from the server. Parsing requires to run some JavaScript.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://miyakogi.github.io/pyppeteer/"&gt;Pyppeteer&lt;/a&gt; makes that possible. Thanks to &lt;a href="https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md"&gt;Headless Chomium&lt;/a&gt;, it gives you access to the full power of a browser from Python. I find that really impressive!&lt;/p&gt;
&lt;p&gt;I tried to use &lt;a href="https://www.seleniumhq.org"&gt;Selenium&lt;/a&gt; in the past but didn't find it very easy to start with. That wasn't the case with Pyppeteer. To be fair, it was a while ago and both projects are quite different. It's not just about browser automation. Selenium allows you to perform cross browser testing. Pyppeteer is limited to Chrome/Chromium.
Anyway, I'll probably look more at Pyppeteer for web application testing.&lt;/p&gt;
&lt;p&gt;For simple tasks, &lt;a href="https://github.com/kennethreitz/requests-html"&gt;Requests-HTML&lt;/a&gt; is a nice wrapper and gives you a simple API. If you want more control, use directly Pyppeteer.&lt;/p&gt;
&lt;p&gt;One last note. To run this code in a Jupyter notebook, you should use tornado 4. asyncio code doesn't play well with ipython and tornado 5. See this Github issue: &lt;a href="https://github.com/ipython/ipython/issues/11030"&gt;asyncio will be running by default with tornado 5&lt;/a&gt;. There is some &lt;a href="https://github.com/ipython/ipython/pull/11155"&gt;work in progress&lt;/a&gt; for a nice integration.&lt;/p&gt;
&lt;p&gt;What about the Lundaloppet results you might ask? I'll explore them in another post!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>javascript</category><category>pandas</category><category>pyppeteer</category><category>python</category><category>request-html</category><category>requests</category><guid>http://beenje.github.io/blog/posts/parsing-javascript-rendered-pages-in-python-with-pyppeteer/</guid><pubDate>Sat, 02 Jun 2018 20:54:45 GMT</pubDate></item><item><title>Parsing HTML Tables in Python with pandas</title><link>http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Not long ago, I needed to parse some HTML tables from our confluence website at work. I first thought: I'm gonna need &lt;a href="http://docs.python-requests.org/en/master/"&gt;requests&lt;/a&gt; and &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;BeautifulSoup&lt;/a&gt;. As HTML tables are well defined, I did some quick googling to see if there was some recipe or lib to parse them and I found a link to &lt;a href="https://pandas.pydata.org"&gt;pandas&lt;/a&gt;. What? Can pandas do that too?&lt;/p&gt;
&lt;p&gt;I have been using pandas for quite some time and have used read_csv, read_excel, even read_sql, but I had missed read_html!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Reading-excel-file-with-pandas"&gt;Reading excel file with pandas&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#Reading-excel-file-with-pandas"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Before to look at HTML tables, I want to show a quick example on how to read an excel file with pandas. The API is really nice. If I have to look at some excel data, I go directly to pandas.&lt;/p&gt;
&lt;p&gt;So let's download a sample file file:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;zipfile&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ZipFile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://www.contextures.com/SampleData.zip'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ZipFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BytesIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This created the &lt;em&gt;SampleData.xlsx&lt;/em&gt; file that includes four sheets: Instructions, SalesOrders, SampleNumbers and MyLinks. Only the &lt;em&gt;SalesOrders&lt;/em&gt; sheet includes tabular data:
&lt;img src="http://beenje.github.io/blog/images/read_html/sample_data_xlsx.png" alt="SampleData"&gt;
So let's read it.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SampleData.xlsx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'SalesOrders'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[4]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;OrderDate&lt;/th&gt;
      &lt;th&gt;Region&lt;/th&gt;
      &lt;th&gt;Rep&lt;/th&gt;
      &lt;th&gt;Item&lt;/th&gt;
      &lt;th&gt;Units&lt;/th&gt;
      &lt;th&gt;Unit Cost&lt;/th&gt;
      &lt;th&gt;Total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2016-01-06&lt;/td&gt;
      &lt;td&gt;East&lt;/td&gt;
      &lt;td&gt;Jones&lt;/td&gt;
      &lt;td&gt;Pencil&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;1.99&lt;/td&gt;
      &lt;td&gt;189.05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2016-01-23&lt;/td&gt;
      &lt;td&gt;Central&lt;/td&gt;
      &lt;td&gt;Kivell&lt;/td&gt;
      &lt;td&gt;Binder&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;19.99&lt;/td&gt;
      &lt;td&gt;999.50&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2016-02-09&lt;/td&gt;
      &lt;td&gt;Central&lt;/td&gt;
      &lt;td&gt;Jardine&lt;/td&gt;
      &lt;td&gt;Pencil&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;4.99&lt;/td&gt;
      &lt;td&gt;179.64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2016-02-26&lt;/td&gt;
      &lt;td&gt;Central&lt;/td&gt;
      &lt;td&gt;Gill&lt;/td&gt;
      &lt;td&gt;Pen&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;19.99&lt;/td&gt;
      &lt;td&gt;539.73&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2016-03-15&lt;/td&gt;
      &lt;td&gt;West&lt;/td&gt;
      &lt;td&gt;Sorvino&lt;/td&gt;
      &lt;td&gt;Pencil&lt;/td&gt;
      &lt;td&gt;56&lt;/td&gt;
      &lt;td&gt;2.99&lt;/td&gt;
      &lt;td&gt;167.44&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;That's it. One line and you have your data in a DataFrame that you can easily manipulate, filter, convert and display in a jupyter notebook. Can it be easier than that?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Parsing-HTML-Tables"&gt;Parsing HTML Tables&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#Parsing-HTML-Tables"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;So let's go back to HTML tables and look at &lt;a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_html.html"&gt;pandas.read_html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The function accepts:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;A URL, a file-like object, or a raw string containing HTML.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's start with a basic HTML table in a raw string.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Parsing-raw-string"&gt;Parsing raw string&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#Parsing-raw-string"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;html_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;thead&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;th&amp;gt;Programming Language&amp;lt;/th&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;th&amp;gt;Creator&amp;lt;/th&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;th&amp;gt;Year&amp;lt;/th&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;/thead&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;tbody&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;C&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;Dennis Ritchie&amp;lt;/td&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;1972&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;Python&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;Guido Van Rossum&amp;lt;/td&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;1989&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;Ruby&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;Yukihiro Matsumoto&amp;lt;/td&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;      &amp;lt;td&amp;gt;1995&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;/tbody&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;We can render the table using IPython &lt;a href="http://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html#IPython.display.display_html"&gt;display_html&lt;/a&gt; function:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;display_html&lt;/span&gt;
&lt;span class="n"&gt;display_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea "&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Programming Language&lt;/th&gt;
      &lt;th&gt;Creator&lt;/th&gt; 
      &lt;th&gt;Year&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Dennis Ritchie&lt;/td&gt; 
      &lt;td&gt;1972&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;Guido Van Rossum&lt;/td&gt; 
      &lt;td&gt;1989&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;Yukihiro Matsumoto&lt;/td&gt; 
      &lt;td&gt;1995&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Let's import this HTML table in a DataFrame. Note that the function &lt;code&gt;read_html&lt;/code&gt; always returns a list of DataFrame objects:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dfs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[7]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;[  Programming Language             Creator  Year
 0                    C      Dennis Ritchie  1972
 1               Python    Guido Van Rossum  1989
 2                 Ruby  Yukihiro Matsumoto  1995]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[8]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Programming Language&lt;/th&gt;
      &lt;th&gt;Creator&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Dennis Ritchie&lt;/td&gt;
      &lt;td&gt;1972&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;Guido Van Rossum&lt;/td&gt;
      &lt;td&gt;1989&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;Yukihiro Matsumoto&lt;/td&gt;
      &lt;td&gt;1995&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This looks quite similar to the raw string we rendered above, but we are printing a pandas DataFrame object here! We can apply any operation we want.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[9]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Programming Language&lt;/th&gt;
      &lt;th&gt;Creator&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;Guido Van Rossum&lt;/td&gt;
      &lt;td&gt;1989&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;Yukihiro Matsumoto&lt;/td&gt;
      &lt;td&gt;1995&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Pandas automatically found the header to use thanks to the &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; tag. It is not mandatory to define a table and is actually often missing on the web. So what happens if it's not present?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [10]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;html_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;th&amp;gt;Programming Language&amp;lt;/th&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;th&amp;gt;Creator&amp;lt;/th&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;th&amp;gt;Year&amp;lt;/th&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;C&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;Dennis Ritchie&amp;lt;/td&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;1972&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;Python&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;Guido Van Rossum&amp;lt;/td&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;1989&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;Ruby&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;Yukihiro Matsumoto&amp;lt;/td&amp;gt; &lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;td&amp;gt;1995&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [11]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_string&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[11]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Programming Language&lt;/td&gt;
      &lt;td&gt;Creator&lt;/td&gt;
      &lt;td&gt;Year&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Dennis Ritchie&lt;/td&gt;
      &lt;td&gt;1972&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;Guido Van Rossum&lt;/td&gt;
      &lt;td&gt;1989&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;Yukihiro Matsumoto&lt;/td&gt;
      &lt;td&gt;1995&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this case, we need to pass the row number to use as header.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [12]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[12]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Programming Language&lt;/th&gt;
      &lt;th&gt;Creator&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Dennis Ritchie&lt;/td&gt;
      &lt;td&gt;1972&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;Guido Van Rossum&lt;/td&gt;
      &lt;td&gt;1989&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;Yukihiro Matsumoto&lt;/td&gt;
      &lt;td&gt;1995&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Parsing-a-http-URL"&gt;Parsing a http URL&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#Parsing-a-http-URL"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The same data we read in our excel file is available in a table at the following address: &lt;a href="http://www.contextures.com/xlSampleData01.html"&gt;http://www.contextures.com/xlSampleData01.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let's pass this url to &lt;code&gt;read_html&lt;/code&gt;:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [13]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://www.contextures.com/xlSampleData01.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [14]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[14]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;[             0        1         2        3      4         5        6
 0    OrderDate   Region       Rep     Item  Units  UnitCost    Total
 1     1/6/2016     East     Jones   Pencil     95      1.99   189.05
 2    1/23/2016  Central    Kivell   Binder     50     19.99   999.50
 3     2/9/2016  Central   Jardine   Pencil     36      4.99   179.64
 4    2/26/2016  Central      Gill      Pen     27     19.99   539.73
 5    3/15/2016     West   Sorvino   Pencil     56      2.99   167.44
 6     4/1/2016     East     Jones   Binder     60      4.99   299.40
 7    4/18/2016  Central   Andrews   Pencil     75      1.99   149.25
 8     5/5/2016  Central   Jardine   Pencil     90      4.99   449.10
 9    5/22/2016     West  Thompson   Pencil     32      1.99    63.68
 10    6/8/2016     East     Jones   Binder     60      8.99   539.40
 11   6/25/2016  Central    Morgan   Pencil     90      4.99   449.10
 12   7/12/2016     East    Howard   Binder     29      1.99    57.71
 13   7/29/2016     East    Parent   Binder     81     19.99  1619.19
 14   8/15/2016     East     Jones   Pencil     35      4.99   174.65
 15    9/1/2016  Central     Smith     Desk      2    125.00   250.00
 16   9/18/2016     East     Jones  Pen Set     16     15.99   255.84
 17   10/5/2016  Central    Morgan   Binder     28      8.99   251.72
 18  10/22/2016     East     Jones      Pen     64      8.99   575.36
 19   11/8/2016     East    Parent      Pen     15     19.99   299.85
 20  11/25/2016  Central    Kivell  Pen Set     96      4.99   479.04
 21  12/12/2016  Central     Smith   Pencil     67      1.29    86.43
 22  12/29/2016     East    Parent  Pen Set     74     15.99  1183.26
 23   1/15/2017  Central      Gill   Binder     46      8.99   413.54
 24    2/1/2017  Central     Smith   Binder     87     15.00  1305.00
 25   2/18/2017     East     Jones   Binder      4      4.99    19.96
 26    3/7/2017     West   Sorvino   Binder      7     19.99   139.93
 27   3/24/2017  Central   Jardine  Pen Set     50      4.99   249.50
 28   4/10/2017  Central   Andrews   Pencil     66      1.99   131.34
 29   4/27/2017     East    Howard      Pen     96      4.99   479.04
 30   5/14/2017  Central      Gill   Pencil     53      1.29    68.37
 31   5/31/2017  Central      Gill   Binder     80      8.99   719.20
 32   6/17/2017  Central    Kivell     Desk      5    125.00   625.00
 33    7/4/2017     East     Jones  Pen Set     62      4.99   309.38
 34   7/21/2017  Central    Morgan  Pen Set     55     12.49   686.95
 35    8/7/2017  Central    Kivell  Pen Set     42     23.95  1005.90
 36   8/24/2017     West   Sorvino     Desk      3    275.00   825.00
 37   9/10/2017  Central      Gill   Pencil      7      1.29     9.03
 38   9/27/2017     West   Sorvino      Pen     76      1.99   151.24
 39  10/14/2017     West  Thompson   Binder     57     19.99  1139.43
 40  10/31/2017  Central   Andrews   Pencil     14      1.29    18.06
 41  11/17/2017  Central   Jardine   Binder     11      4.99    54.89
 42   12/4/2017  Central   Jardine   Binder     94     19.99  1879.06
 43  12/21/2017  Central   Andrews   Binder     28      4.99   139.72]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;We have one table and can see that we need to pass the row number to use as header (because &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; is not present).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [15]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://www.contextures.com/xlSampleData01.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[15]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;OrderDate&lt;/th&gt;
      &lt;th&gt;Region&lt;/th&gt;
      &lt;th&gt;Rep&lt;/th&gt;
      &lt;th&gt;Item&lt;/th&gt;
      &lt;th&gt;Units&lt;/th&gt;
      &lt;th&gt;UnitCost&lt;/th&gt;
      &lt;th&gt;Total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1/6/2016&lt;/td&gt;
      &lt;td&gt;East&lt;/td&gt;
      &lt;td&gt;Jones&lt;/td&gt;
      &lt;td&gt;Pencil&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;1.99&lt;/td&gt;
      &lt;td&gt;189.05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1/23/2016&lt;/td&gt;
      &lt;td&gt;Central&lt;/td&gt;
      &lt;td&gt;Kivell&lt;/td&gt;
      &lt;td&gt;Binder&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;19.99&lt;/td&gt;
      &lt;td&gt;999.50&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2/9/2016&lt;/td&gt;
      &lt;td&gt;Central&lt;/td&gt;
      &lt;td&gt;Jardine&lt;/td&gt;
      &lt;td&gt;Pencil&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;4.99&lt;/td&gt;
      &lt;td&gt;179.64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2/26/2016&lt;/td&gt;
      &lt;td&gt;Central&lt;/td&gt;
      &lt;td&gt;Gill&lt;/td&gt;
      &lt;td&gt;Pen&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;19.99&lt;/td&gt;
      &lt;td&gt;539.73&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;3/15/2016&lt;/td&gt;
      &lt;td&gt;West&lt;/td&gt;
      &lt;td&gt;Sorvino&lt;/td&gt;
      &lt;td&gt;Pencil&lt;/td&gt;
      &lt;td&gt;56&lt;/td&gt;
      &lt;td&gt;2.99&lt;/td&gt;
      &lt;td&gt;167.44&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Nice!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Parsing-a-https-URL"&gt;Parsing a https URL&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#Parsing-a-https-URL"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The documentation states that:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Note that lxml only accepts the http, ftp and file url protocols. If you have a URL that starts with 'https' you might try removing the 's'.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is true, but &lt;em&gt;bs4 + html5lib&lt;/em&gt; are used as a fallback when &lt;em&gt;lxml&lt;/em&gt; fails. I guess this is why passing a &lt;code&gt;https&lt;/code&gt; url does work. We can confirm that with a wikipedia page.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [16]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://en.wikipedia.org/wiki/Python_(programming_language)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[16]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;mutable&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Syntax example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Boolean value&lt;/td&gt;
      &lt;td&gt;True False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;bytearray&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;Sequence of bytes&lt;/td&gt;
      &lt;td&gt;bytearray(b'Some ASCII') bytearray(b"Some ASCI...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;bytes&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Sequence of bytes&lt;/td&gt;
      &lt;td&gt;b'Some ASCII' b"Some ASCII" bytes([119, 105, 1...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;complex&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Complex number with real and imaginary parts&lt;/td&gt;
      &lt;td&gt;3+2.7j&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;dict&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;Associative array (or dictionary) of key and v...&lt;/td&gt;
      &lt;td&gt;{'key1': 1.0, 3: False}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;ellipsis&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;An ellipsis placeholder to be used as an index...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Floating point number, system-defined precision&lt;/td&gt;
      &lt;td&gt;3.1415927&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;frozenset&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Unordered set, contains no duplicates; can con...&lt;/td&gt;
      &lt;td&gt;frozenset([4.0, 'string', True])&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;int&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Integer of unlimited magnitude[76]&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;List, can contain mixed types&lt;/td&gt;
      &lt;td&gt;[4.0, 'string', True]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;set&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;Unordered set, contains no duplicates; can con...&lt;/td&gt;
      &lt;td&gt;{4.0, 'string', True}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;str&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;A character string: sequence of Unicode codepo...&lt;/td&gt;
      &lt;td&gt;'Wikipedia' "Wikipedia" """Spanning multiple l...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;tuple&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Can contain mixed types&lt;/td&gt;
      &lt;td&gt;(4.0, 'string', True)But we can append element...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;But what if the url requires authentiation?&lt;/p&gt;
&lt;p&gt;In that case we can use &lt;a href="http://docs.python-requests.org/en/master/"&gt;requests&lt;/a&gt; to get the HTML and pass the string to pandas!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;To demonstrate authentication, we can use &lt;a href="http://httpbin.org"&gt;http://httpbin.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We can first confirm that passing a url that requires authentication raises a 401&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [17]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://httpbin.org/basic-auth/myuser/mypasswd'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_text output_error"&gt;
&lt;pre&gt;
&lt;span class="ansi-red-fg"&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="ansi-red-fg"&gt;HTTPError&lt;/span&gt;                                 Traceback (most recent call last)
&lt;span class="ansi-green-fg"&gt;&amp;lt;ipython-input-17-7e6b50c9f1f3&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;&amp;lt;module&amp;gt;&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;()&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;----&amp;gt; 1&lt;/span&gt;&lt;span class="ansi-red-fg"&gt; &lt;/span&gt;pd&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;read_html&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;'https://httpbin.org/basic-auth/myuser/mypasswd'&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;

&lt;span class="ansi-green-fg"&gt;~/miniconda3/envs/jupyter/lib/python3.6/site-packages/pandas/io/html.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;read_html&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;(io, match, flavor, header, index_col, skiprows, attrs, parse_dates, tupleize_cols, thousands, encoding, decimal, converters, na_values, keep_default_na)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    913&lt;/span&gt;                   thousands&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;thousands&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; attrs&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;attrs&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; encoding&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;encoding&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    914&lt;/span&gt;                   decimal&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;decimal&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; converters&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;converters&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; na_values&lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt;na_values&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;--&amp;gt; 915&lt;/span&gt;&lt;span class="ansi-red-fg"&gt;                   keep_default_na=keep_default_na)
&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;~/miniconda3/envs/jupyter/lib/python3.6/site-packages/pandas/io/html.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;_parse&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;(flavor, io, match, attrs, encoding, **kwargs)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    747&lt;/span&gt;             &lt;span class="ansi-green-fg"&gt;break&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    748&lt;/span&gt;     &lt;span class="ansi-green-fg"&gt;else&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;--&amp;gt; 749&lt;/span&gt;&lt;span class="ansi-red-fg"&gt;         &lt;/span&gt;raise_with_traceback&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;retained&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    750&lt;/span&gt; 
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    751&lt;/span&gt;     ret &lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt; &lt;span class="ansi-blue-fg"&gt;[&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;]&lt;/span&gt;

&lt;span class="ansi-green-fg"&gt;~/miniconda3/envs/jupyter/lib/python3.6/site-packages/pandas/compat/__init__.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;raise_with_traceback&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;(exc, traceback)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    383&lt;/span&gt;         &lt;span class="ansi-green-fg"&gt;if&lt;/span&gt; traceback &lt;span class="ansi-blue-fg"&gt;==&lt;/span&gt; Ellipsis&lt;span class="ansi-blue-fg"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    384&lt;/span&gt;             _&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; _&lt;span class="ansi-blue-fg"&gt;,&lt;/span&gt; traceback &lt;span class="ansi-blue-fg"&gt;=&lt;/span&gt; sys&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;exc_info&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;--&amp;gt; 385&lt;/span&gt;&lt;span class="ansi-red-fg"&gt;         &lt;/span&gt;&lt;span class="ansi-green-fg"&gt;raise&lt;/span&gt; exc&lt;span class="ansi-blue-fg"&gt;.&lt;/span&gt;with_traceback&lt;span class="ansi-blue-fg"&gt;(&lt;/span&gt;traceback&lt;span class="ansi-blue-fg"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    386&lt;/span&gt; &lt;span class="ansi-green-fg"&gt;else&lt;/span&gt;&lt;span class="ansi-blue-fg"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;    387&lt;/span&gt;     &lt;span class="ansi-red-fg"&gt;# this version of raise is a syntax error in Python 3&lt;/span&gt;

&lt;span class="ansi-red-fg"&gt;HTTPError&lt;/span&gt;: HTTP Error 401: UNAUTHORIZED&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://httpbin.org/basic-auth/myuser/mypasswd'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Yes, as expected. Let's pass the username and password with requests.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://httpbin.org/basic-auth/myuser/mypasswd'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'myuser'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mypasswd'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;We could now pass &lt;code&gt;r.text&lt;/code&gt; to pandas. &lt;a href="http://httpbin.org"&gt;http://httpbin.org&lt;/a&gt; was used to demonstrate authentication but it only returns JSON-encoded responses and no HTML. It's a testing service. So it doesn't make sense here.&lt;/p&gt;
&lt;p&gt;The following example shows how to combine requests and pandas.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [18]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://en.wikipedia.org/wiki/Python_(programming_language)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[18]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;mutable&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Syntax example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Boolean value&lt;/td&gt;
      &lt;td&gt;True False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;bytearray&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;Sequence of bytes&lt;/td&gt;
      &lt;td&gt;bytearray(b'Some ASCII') bytearray(b"Some ASCI...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;bytes&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Sequence of bytes&lt;/td&gt;
      &lt;td&gt;b'Some ASCII' b"Some ASCII" bytes([119, 105, 1...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;complex&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Complex number with real and imaginary parts&lt;/td&gt;
      &lt;td&gt;3+2.7j&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;dict&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;Associative array (or dictionary) of key and v...&lt;/td&gt;
      &lt;td&gt;{'key1': 1.0, 3: False}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;ellipsis&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;An ellipsis placeholder to be used as an index...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Floating point number, system-defined precision&lt;/td&gt;
      &lt;td&gt;3.1415927&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;frozenset&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Unordered set, contains no duplicates; can con...&lt;/td&gt;
      &lt;td&gt;frozenset([4.0, 'string', True])&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;int&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Integer of unlimited magnitude[76]&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;List, can contain mixed types&lt;/td&gt;
      &lt;td&gt;[4.0, 'string', True]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;set&lt;/td&gt;
      &lt;td&gt;mutable&lt;/td&gt;
      &lt;td&gt;Unordered set, contains no duplicates; can con...&lt;/td&gt;
      &lt;td&gt;{4.0, 'string', True}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;str&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;A character string: sequence of Unicode codepo...&lt;/td&gt;
      &lt;td&gt;'Wikipedia' "Wikipedia" """Spanning multiple l...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;tuple&lt;/td&gt;
      &lt;td&gt;immutable&lt;/td&gt;
      &lt;td&gt;Can contain mixed types&lt;/td&gt;
      &lt;td&gt;(4.0, 'string', True)But we can append element...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="A-more-complex-example"&gt;A more complex example&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#A-more-complex-example"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;We looked at some quite simple examples so far. So let's try a page with several tables: &lt;a href="https://en.wikipedia.org/wiki/Timeline_of_programming_languages"&gt;https://en.wikipedia.org/wiki/Timeline_of_programming_languages&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [19]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://en.wikipedia.org/wiki/Timeline_of_programming_languages'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [20]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[20]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;13&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;If we look at the page we have 8 tables (one per decade). Looking at our &lt;code&gt;dfs&lt;/code&gt; list, we can see that the first interesting table is the fifth one and that we need to pass the row to use as header.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [21]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://en.wikipedia.org/wiki/Timeline_of_programming_languages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[21]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Chief developer, company&lt;/th&gt;
      &lt;th&gt;Predecessor(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1943–45&lt;/td&gt;
      &lt;td&gt;Plankalkül (concept)&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1943–46&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
      &lt;td&gt;John von Neumann, John Mauchly, J. Presper Eck...&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;ENIAC Short Code&lt;/td&gt;
      &lt;td&gt;Richard Clippinger, John von Neumann after Ala...&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;Von Neumann and Goldstine graphing system (Not...&lt;/td&gt;
      &lt;td&gt;John von Neumann and Herman Goldstine&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1947&lt;/td&gt;
      &lt;td&gt;ARC Assembly&lt;/td&gt;
      &lt;td&gt;Kathleen Booth[1][2]&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
      &lt;td&gt;Howard H. Aiken&lt;/td&gt;
      &lt;td&gt;Analytical Engine order code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;Curry notation system&lt;/td&gt;
      &lt;td&gt;Haskell Curry&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;Plankalkül (concept published)&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1949&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
      &lt;td&gt;John Mauchly and William F. Schmitt&lt;/td&gt;
      &lt;td&gt;ENIAC Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Year&lt;/td&gt;
      &lt;td&gt;Name&lt;/td&gt;
      &lt;td&gt;Chief developer, company&lt;/td&gt;
      &lt;td&gt;Predecessor(s)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Notice that the header was repeated in the last row (to make the table easier to read on the HTML page). We can filter that after concatenating together the 8 tables to get one DataFrame.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [22]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[22]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Chief developer, company&lt;/th&gt;
      &lt;th&gt;Predecessor(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1943–45&lt;/td&gt;
      &lt;td&gt;Plankalkül (concept)&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1943–46&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
      &lt;td&gt;John von Neumann, John Mauchly, J. Presper Eck...&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;ENIAC Short Code&lt;/td&gt;
      &lt;td&gt;Richard Clippinger, John von Neumann after Ala...&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;Von Neumann and Goldstine graphing system (Not...&lt;/td&gt;
      &lt;td&gt;John von Neumann and Herman Goldstine&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1947&lt;/td&gt;
      &lt;td&gt;ARC Assembly&lt;/td&gt;
      &lt;td&gt;Kathleen Booth[1][2]&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
      &lt;td&gt;Howard H. Aiken&lt;/td&gt;
      &lt;td&gt;Analytical Engine order code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;Curry notation system&lt;/td&gt;
      &lt;td&gt;Haskell Curry&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;Plankalkül (concept published)&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1949&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
      &lt;td&gt;John Mauchly and William F. Schmitt&lt;/td&gt;
      &lt;td&gt;ENIAC Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Year&lt;/td&gt;
      &lt;td&gt;Name&lt;/td&gt;
      &lt;td&gt;Chief developer, company&lt;/td&gt;
      &lt;td&gt;Predecessor(s)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1950&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
      &lt;td&gt;William F Schmidt, Albert B. Tonik,[3] J.R. Logan&lt;/td&gt;
      &lt;td&gt;Brief Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1950&lt;/td&gt;
      &lt;td&gt;Birkbeck Assembler&lt;/td&gt;
      &lt;td&gt;Kathleen Booth&lt;/td&gt;
      &lt;td&gt;ARC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Superplan&lt;/td&gt;
      &lt;td&gt;Heinz Rutishauser&lt;/td&gt;
      &lt;td&gt;Plankalkül&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;ALGAE&lt;/td&gt;
      &lt;td&gt;Edward A Voorhees and Karl Balke&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Intermediate Programming Language&lt;/td&gt;
      &lt;td&gt;Arthur Burks&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Regional Assembly Language&lt;/td&gt;
      &lt;td&gt;Maurice Wilkes&lt;/td&gt;
      &lt;td&gt;EDSAC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Boehm unnamed coding system&lt;/td&gt;
      &lt;td&gt;Corrado Böhm&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Klammerausdrücke&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;Plankalkül&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;OMNIBAC Symbolic Assembler&lt;/td&gt;
      &lt;td&gt;Charles Katz&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Stanislaus (Notation)&lt;/td&gt;
      &lt;td&gt;Fritz Bauer&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Whirlwind assembler&lt;/td&gt;
      &lt;td&gt;Charles Adams and Jack Gilmore at MIT Project ...&lt;/td&gt;
      &lt;td&gt;EDSAC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Rochester assembler&lt;/td&gt;
      &lt;td&gt;Nat Rochester&lt;/td&gt;
      &lt;td&gt;EDSAC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Sort Merge Generator&lt;/td&gt;
      &lt;td&gt;Betty Holberton&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;A-0&lt;/td&gt;
      &lt;td&gt;Grace Hopper&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;Glennie Autocode&lt;/td&gt;
      &lt;td&gt;Alick Glennie after Alan Turing&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;Editing Generator&lt;/td&gt;
      &lt;td&gt;Milly Koss&lt;/td&gt;
      &lt;td&gt;SORT/MERGE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;COMPOOL&lt;/td&gt;
      &lt;td&gt;RAND/SDC&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;1953&lt;/td&gt;
      &lt;td&gt;Speedcoding&lt;/td&gt;
      &lt;td&gt;John W. Backus&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;1953&lt;/td&gt;
      &lt;td&gt;READ/PRINT&lt;/td&gt;
      &lt;td&gt;Don Harroff, James Fishman, George Ryckman&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;1954&lt;/td&gt;
      &lt;td&gt;Laning and Zierler system&lt;/td&gt;
      &lt;td&gt;Laning, Zierler, Adams at MIT Project Whirlwind&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;47&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Chapel&lt;/td&gt;
      &lt;td&gt;Brad Chamberlain, Cray Inc.&lt;/td&gt;
      &lt;td&gt;HPF, ZPL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;48&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Go&lt;/td&gt;
      &lt;td&gt;Google&lt;/td&gt;
      &lt;td&gt;C, Oberon, Limbo, Smalltalk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;49&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;CoffeeScript&lt;/td&gt;
      &lt;td&gt;Jeremy Ashkenas&lt;/td&gt;
      &lt;td&gt;JavaScript, Ruby, Python, Haskell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Idris&lt;/td&gt;
      &lt;td&gt;Edwin Brady&lt;/td&gt;
      &lt;td&gt;Haskell, Agda, Coq&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;51&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Parasail&lt;/td&gt;
      &lt;td&gt;S. Tucker Taft, AdaCore&lt;/td&gt;
      &lt;td&gt;Modula, Ada, Pascal, ML&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;52&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Whiley&lt;/td&gt;
      &lt;td&gt;David J. Pearce&lt;/td&gt;
      &lt;td&gt;Java, C, Python&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;53&lt;/th&gt;
      &lt;td&gt;Year&lt;/td&gt;
      &lt;td&gt;Name&lt;/td&gt;
      &lt;td&gt;Chief developer, company&lt;/td&gt;
      &lt;td&gt;Predecessor(s)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2010&lt;/td&gt;
      &lt;td&gt;Rust&lt;/td&gt;
      &lt;td&gt;Graydon Hoare, Mozilla&lt;/td&gt;
      &lt;td&gt;Alef, C++, Camlp4, Erlang, Hermes, Limbo, Napi...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Ceylon&lt;/td&gt;
      &lt;td&gt;Gavin King, Red Hat&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Dart&lt;/td&gt;
      &lt;td&gt;Google&lt;/td&gt;
      &lt;td&gt;Java, JavaScript, CoffeeScript, Go&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;C++11&lt;/td&gt;
      &lt;td&gt;C++ ISO/IEC 14882:2011&lt;/td&gt;
      &lt;td&gt;C++, Standard C, C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Kotlin&lt;/td&gt;
      &lt;td&gt;JetBrains&lt;/td&gt;
      &lt;td&gt;Java, Scala, Groovy, C#, Gosu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Red&lt;/td&gt;
      &lt;td&gt;Nenad Rakocevic&lt;/td&gt;
      &lt;td&gt;Rebol, Scala, Lua&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Opa&lt;/td&gt;
      &lt;td&gt;MLstate&lt;/td&gt;
      &lt;td&gt;OCaml, Erlang, JavaScript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Elixir&lt;/td&gt;
      &lt;td&gt;José Valim&lt;/td&gt;
      &lt;td&gt;Erlang, Ruby, Clojure&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Elm&lt;/td&gt;
      &lt;td&gt;Evan Czaplicki&lt;/td&gt;
      &lt;td&gt;Haskell, Standard ML, OCaml, F#&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;TypeScript&lt;/td&gt;
      &lt;td&gt;Anders Hejlsberg, Microsoft&lt;/td&gt;
      &lt;td&gt;JavaScript, CoffeeScript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Jeff Bezanson, Stefan Karpinski, Viral Shah, A...&lt;/td&gt;
      &lt;td&gt;MATLAB, Lisp, C, Fortran, Mathematica[9] (stri...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;Vivek Gupta: not the politician, Ethan Jackson...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Ada 2012&lt;/td&gt;
      &lt;td&gt;ARA and Ada Europe (ISO/IEC 8652:2012)&lt;/td&gt;
      &lt;td&gt;Ada 2005, ISO/IEC 8652:1995/Amd 1:2007&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;Crystal&lt;/td&gt;
      &lt;td&gt;Ary Borenszweig, Manas Technology Solutions&lt;/td&gt;
      &lt;td&gt;Ruby, C, Rust, Go, C#, Python&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;Hack&lt;/td&gt;
      &lt;td&gt;Facebook&lt;/td&gt;
      &lt;td&gt;PHP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;Swift&lt;/td&gt;
      &lt;td&gt;Apple Inc.&lt;/td&gt;
      &lt;td&gt;Objective-C, Rust, Haskell, Ruby, Python, C#, CLU&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;C++14&lt;/td&gt;
      &lt;td&gt;C++ ISO/IEC 14882:2014&lt;/td&gt;
      &lt;td&gt;C++, Standard C, C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Atari 2600 SuperCharger BASIC&lt;/td&gt;
      &lt;td&gt;Microsoft sponsored think tank RelationalFrame...&lt;/td&gt;
      &lt;td&gt;BASIC, Dartmouth BASIC (compiled programming l...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Perl 6&lt;/td&gt;
      &lt;td&gt;The Rakudo Team&lt;/td&gt;
      &lt;td&gt;Perl, Haskell, Python, Ruby&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;Ring&lt;/td&gt;
      &lt;td&gt;Mahmoud Fayed&lt;/td&gt;
      &lt;td&gt;Lua, Python, Ruby, C, C#, BASIC, QML, xBase, S...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;C++17&lt;/td&gt;
      &lt;td&gt;C++ ISO/IEC 14882:2017&lt;/td&gt;
      &lt;td&gt;C++, Standard C, C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;21&lt;/th&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;Atari 2600 Flashback BASIC&lt;/td&gt;
      &lt;td&gt;Microsoft sponsored think tank RelationalFrame...&lt;/td&gt;
      &lt;td&gt;BASIC, Dartmouth BASIC (compiled programming l...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;22&lt;/th&gt;
      &lt;td&gt;Year&lt;/td&gt;
      &lt;td&gt;Name&lt;/td&gt;
      &lt;td&gt;Chief developer, company&lt;/td&gt;
      &lt;td&gt;Predecessor(s)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;388 rows × 4 columns&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Remove the extra &lt;em&gt;header&lt;/em&gt; rows.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [23]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;prog_lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;'Year'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;prog_lang&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[23]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Chief developer, company&lt;/th&gt;
      &lt;th&gt;Predecessor(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1943–45&lt;/td&gt;
      &lt;td&gt;Plankalkül (concept)&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1943–46&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
      &lt;td&gt;John von Neumann, John Mauchly, J. Presper Eck...&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;ENIAC Short Code&lt;/td&gt;
      &lt;td&gt;Richard Clippinger, John von Neumann after Ala...&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;Von Neumann and Goldstine graphing system (Not...&lt;/td&gt;
      &lt;td&gt;John von Neumann and Herman Goldstine&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1947&lt;/td&gt;
      &lt;td&gt;ARC Assembly&lt;/td&gt;
      &lt;td&gt;Kathleen Booth[1][2]&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
      &lt;td&gt;Howard H. Aiken&lt;/td&gt;
      &lt;td&gt;Analytical Engine order code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;Curry notation system&lt;/td&gt;
      &lt;td&gt;Haskell Curry&lt;/td&gt;
      &lt;td&gt;ENIAC coding system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1948&lt;/td&gt;
      &lt;td&gt;Plankalkül (concept published)&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1949&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
      &lt;td&gt;John Mauchly and William F. Schmitt&lt;/td&gt;
      &lt;td&gt;ENIAC Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1950&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
      &lt;td&gt;William F Schmidt, Albert B. Tonik,[3] J.R. Logan&lt;/td&gt;
      &lt;td&gt;Brief Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1950&lt;/td&gt;
      &lt;td&gt;Birkbeck Assembler&lt;/td&gt;
      &lt;td&gt;Kathleen Booth&lt;/td&gt;
      &lt;td&gt;ARC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Superplan&lt;/td&gt;
      &lt;td&gt;Heinz Rutishauser&lt;/td&gt;
      &lt;td&gt;Plankalkül&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;ALGAE&lt;/td&gt;
      &lt;td&gt;Edward A Voorhees and Karl Balke&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Intermediate Programming Language&lt;/td&gt;
      &lt;td&gt;Arthur Burks&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Regional Assembly Language&lt;/td&gt;
      &lt;td&gt;Maurice Wilkes&lt;/td&gt;
      &lt;td&gt;EDSAC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Boehm unnamed coding system&lt;/td&gt;
      &lt;td&gt;Corrado Böhm&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Klammerausdrücke&lt;/td&gt;
      &lt;td&gt;Konrad Zuse&lt;/td&gt;
      &lt;td&gt;Plankalkül&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;OMNIBAC Symbolic Assembler&lt;/td&gt;
      &lt;td&gt;Charles Katz&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Stanislaus (Notation)&lt;/td&gt;
      &lt;td&gt;Fritz Bauer&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Whirlwind assembler&lt;/td&gt;
      &lt;td&gt;Charles Adams and Jack Gilmore at MIT Project ...&lt;/td&gt;
      &lt;td&gt;EDSAC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Rochester assembler&lt;/td&gt;
      &lt;td&gt;Nat Rochester&lt;/td&gt;
      &lt;td&gt;EDSAC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1951&lt;/td&gt;
      &lt;td&gt;Sort Merge Generator&lt;/td&gt;
      &lt;td&gt;Betty Holberton&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;A-0&lt;/td&gt;
      &lt;td&gt;Grace Hopper&lt;/td&gt;
      &lt;td&gt;Short Code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;Glennie Autocode&lt;/td&gt;
      &lt;td&gt;Alick Glennie after Alan Turing&lt;/td&gt;
      &lt;td&gt;CPC Coding scheme&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;Editing Generator&lt;/td&gt;
      &lt;td&gt;Milly Koss&lt;/td&gt;
      &lt;td&gt;SORT/MERGE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;1952&lt;/td&gt;
      &lt;td&gt;COMPOOL&lt;/td&gt;
      &lt;td&gt;RAND/SDC&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;1953&lt;/td&gt;
      &lt;td&gt;Speedcoding&lt;/td&gt;
      &lt;td&gt;John W. Backus&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;1953&lt;/td&gt;
      &lt;td&gt;READ/PRINT&lt;/td&gt;
      &lt;td&gt;Don Harroff, James Fishman, George Ryckman&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;1954&lt;/td&gt;
      &lt;td&gt;Laning and Zierler system&lt;/td&gt;
      &lt;td&gt;Laning, Zierler, Adams at MIT Project Whirlwind&lt;/td&gt;
      &lt;td&gt;none (unique language)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;td&gt;1954&lt;/td&gt;
      &lt;td&gt;Mark I Autocode&lt;/td&gt;
      &lt;td&gt;Tony Brooker&lt;/td&gt;
      &lt;td&gt;Glennie Autocode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;45&lt;/th&gt;
      &lt;td&gt;2008&lt;/td&gt;
      &lt;td&gt;Genie&lt;/td&gt;
      &lt;td&gt;Jamie McCracken&lt;/td&gt;
      &lt;td&gt;Python, Boo, D, Object Pascal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;46&lt;/th&gt;
      &lt;td&gt;2008&lt;/td&gt;
      &lt;td&gt;Pure&lt;/td&gt;
      &lt;td&gt;Albert Gräf&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;47&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Chapel&lt;/td&gt;
      &lt;td&gt;Brad Chamberlain, Cray Inc.&lt;/td&gt;
      &lt;td&gt;HPF, ZPL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;48&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Go&lt;/td&gt;
      &lt;td&gt;Google&lt;/td&gt;
      &lt;td&gt;C, Oberon, Limbo, Smalltalk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;49&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;CoffeeScript&lt;/td&gt;
      &lt;td&gt;Jeremy Ashkenas&lt;/td&gt;
      &lt;td&gt;JavaScript, Ruby, Python, Haskell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Idris&lt;/td&gt;
      &lt;td&gt;Edwin Brady&lt;/td&gt;
      &lt;td&gt;Haskell, Agda, Coq&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;51&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Parasail&lt;/td&gt;
      &lt;td&gt;S. Tucker Taft, AdaCore&lt;/td&gt;
      &lt;td&gt;Modula, Ada, Pascal, ML&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;52&lt;/th&gt;
      &lt;td&gt;2009&lt;/td&gt;
      &lt;td&gt;Whiley&lt;/td&gt;
      &lt;td&gt;David J. Pearce&lt;/td&gt;
      &lt;td&gt;Java, C, Python&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2010&lt;/td&gt;
      &lt;td&gt;Rust&lt;/td&gt;
      &lt;td&gt;Graydon Hoare, Mozilla&lt;/td&gt;
      &lt;td&gt;Alef, C++, Camlp4, Erlang, Hermes, Limbo, Napi...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Ceylon&lt;/td&gt;
      &lt;td&gt;Gavin King, Red Hat&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Dart&lt;/td&gt;
      &lt;td&gt;Google&lt;/td&gt;
      &lt;td&gt;Java, JavaScript, CoffeeScript, Go&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;C++11&lt;/td&gt;
      &lt;td&gt;C++ ISO/IEC 14882:2011&lt;/td&gt;
      &lt;td&gt;C++, Standard C, C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Kotlin&lt;/td&gt;
      &lt;td&gt;JetBrains&lt;/td&gt;
      &lt;td&gt;Java, Scala, Groovy, C#, Gosu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Red&lt;/td&gt;
      &lt;td&gt;Nenad Rakocevic&lt;/td&gt;
      &lt;td&gt;Rebol, Scala, Lua&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2011&lt;/td&gt;
      &lt;td&gt;Opa&lt;/td&gt;
      &lt;td&gt;MLstate&lt;/td&gt;
      &lt;td&gt;OCaml, Erlang, JavaScript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Elixir&lt;/td&gt;
      &lt;td&gt;José Valim&lt;/td&gt;
      &lt;td&gt;Erlang, Ruby, Clojure&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Elm&lt;/td&gt;
      &lt;td&gt;Evan Czaplicki&lt;/td&gt;
      &lt;td&gt;Haskell, Standard ML, OCaml, F#&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;TypeScript&lt;/td&gt;
      &lt;td&gt;Anders Hejlsberg, Microsoft&lt;/td&gt;
      &lt;td&gt;JavaScript, CoffeeScript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Jeff Bezanson, Stefan Karpinski, Viral Shah, A...&lt;/td&gt;
      &lt;td&gt;MATLAB, Lisp, C, Fortran, Mathematica[9] (stri...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;Vivek Gupta: not the politician, Ethan Jackson...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;2012&lt;/td&gt;
      &lt;td&gt;Ada 2012&lt;/td&gt;
      &lt;td&gt;ARA and Ada Europe (ISO/IEC 8652:2012)&lt;/td&gt;
      &lt;td&gt;Ada 2005, ISO/IEC 8652:1995/Amd 1:2007&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;Crystal&lt;/td&gt;
      &lt;td&gt;Ary Borenszweig, Manas Technology Solutions&lt;/td&gt;
      &lt;td&gt;Ruby, C, Rust, Go, C#, Python&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;Hack&lt;/td&gt;
      &lt;td&gt;Facebook&lt;/td&gt;
      &lt;td&gt;PHP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;Swift&lt;/td&gt;
      &lt;td&gt;Apple Inc.&lt;/td&gt;
      &lt;td&gt;Objective-C, Rust, Haskell, Ruby, Python, C#, CLU&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;2014&lt;/td&gt;
      &lt;td&gt;C++14&lt;/td&gt;
      &lt;td&gt;C++ ISO/IEC 14882:2014&lt;/td&gt;
      &lt;td&gt;C++, Standard C, C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Atari 2600 SuperCharger BASIC&lt;/td&gt;
      &lt;td&gt;Microsoft sponsored think tank RelationalFrame...&lt;/td&gt;
      &lt;td&gt;BASIC, Dartmouth BASIC (compiled programming l...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Perl 6&lt;/td&gt;
      &lt;td&gt;The Rakudo Team&lt;/td&gt;
      &lt;td&gt;Perl, Haskell, Python, Ruby&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;Ring&lt;/td&gt;
      &lt;td&gt;Mahmoud Fayed&lt;/td&gt;
      &lt;td&gt;Lua, Python, Ruby, C, C#, BASIC, QML, xBase, S...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;C++17&lt;/td&gt;
      &lt;td&gt;C++ ISO/IEC 14882:2017&lt;/td&gt;
      &lt;td&gt;C++, Standard C, C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;21&lt;/th&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;Atari 2600 Flashback BASIC&lt;/td&gt;
      &lt;td&gt;Microsoft sponsored think tank RelationalFrame...&lt;/td&gt;
      &lt;td&gt;BASIC, Dartmouth BASIC (compiled programming l...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;380 rows × 4 columns&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In what year was Python created?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [24]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;prog_lang&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prog_lang&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'Python'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[24]:&lt;/div&gt;

&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Year&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Chief developer, company&lt;/th&gt;
      &lt;th&gt;Predecessor(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1991&lt;/td&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;Guido van Rossum&lt;/td&gt;
      &lt;td&gt;ABC, ALGOL 68, Icon, Modula-3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Conclusion"&gt;Conclusion&lt;a class="anchor-link" href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/#Conclusion"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The last example should say it all.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [25]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://en.wikipedia.org/wiki/Timeline_of_programming_languages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;prog_lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;'Year'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Four lines of code (including the &lt;code&gt;import&lt;/code&gt;) and we have one DataFrame containing the data from 8 different HTML tables on one wikipedia page!&lt;/p&gt;
&lt;p&gt;Do I need to say why I love Python and pandas? :-)&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This post was written in a jupyter notebook.
You can find the notebook on &lt;a href="https://github.com/beenje/blog/blob/master/posts/parsing-html-tables-in-python-with-pandas.ipynb"&gt;GitHub&lt;/a&gt; and download the conda &lt;a href="http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/environment.yml"&gt;environment.yml&lt;/a&gt; file to get all the dependencies I used.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>pandas</category><category>python</category><category>requests</category><guid>http://beenje.github.io/blog/posts/parsing-html-tables-in-python-with-pandas/</guid><pubDate>Tue, 27 Mar 2018 20:31:12 GMT</pubDate></item><item><title>Logging to a Tkinter ScrolledText Widget</title><link>http://beenje.github.io/blog/posts/logging-to-a-tkinter-scrolledtext-widget/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been programming in Python for almost 10 years.
I did many CLI tools, some web applications (mainly using &lt;a class="reference external" href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt;),
but I had never built a GUI.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://riverbankcomputing.com/software/pyqt/intro"&gt;PyQt&lt;/a&gt; seems to be one of the most popular framework. I had a look at it but I was not hooked.
It looks like you really need to embrace the Qt world. You shouldn't try to use
&lt;a class="reference external" href="https://docs.python.org/3/library/threading.html#threading.Thread"&gt;Python Thread&lt;/a&gt; but use QtThread instead.
Need &lt;a class="reference external" href="http://pyserial.readthedocs.io/en/latest/"&gt;pySerial&lt;/a&gt;? Wait there is QtSerial. I guess this can be a pro or con
depending on your background.&lt;/p&gt;
&lt;p&gt;I looked more in &lt;a class="reference external" href="https://docs.python.org/3.6/library/tkinter.html"&gt;tkinter&lt;/a&gt;. I must say that in my mind it was a bit old and wasn't looking very modern.
I didn't know that &lt;a class="reference external" href="http://www.tkdocs.com"&gt;Tk 8.5&lt;/a&gt; came with an entirely new themed widget set to address the dated appearance.
The &lt;a class="reference external" href="http://www.tkdocs.com/tutorial/index.html"&gt;official tutorial&lt;/a&gt; is quite nice and comes with code examples in different languages (including Python).&lt;/p&gt;
&lt;p&gt;The GUI I needed to write wasn't very advanced.
I wanted to have a kind of console where to display log messages.&lt;/p&gt;
&lt;div class="section" id="texthandler"&gt;
&lt;h2&gt;TextHandler&lt;/h2&gt;
&lt;p&gt;I quickly found an &lt;a class="reference external" href="https://gist.github.com/moshekaplan/c425f861de7bbf28ef06"&gt;example&lt;/a&gt; on
&lt;a class="reference external" href="https://stackoverflow.com/questions/13318742/python-logging-to-tkinter-text-widget"&gt;StackOverflow&lt;/a&gt;
to send Python logging to a tkinter Text widget:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class TextHandler(logging.Handler):
    """This class allows you to log to a Tkinter Text or ScrolledText widget"""

    def __init__(self, text):
        # run the regular Handler __init__
        logging.Handler.__init__(self)
        # Store a reference to the Text it will log to
        self.text = text

    def emit(self, record):
        msg = self.format(record)

        def append():
            self.text.configure(state='normal')
            self.text.insert(tk.END, msg + '\n')
            self.text.configure(state='disabled')
            # Autoscroll to the bottom
            self.text.yview(tk.END)
        # This is necessary because we can't modify the Text from other threads
        self.text.after(0, append)
&lt;/pre&gt;
&lt;p&gt;This looks nice but doesn't work if you try to send a log message from another thread
(despite the comment)...
because we are passing the text widget with the logging handler to the other thread.
And you can only write to a tkinter widget from the main thread.&lt;/p&gt;
&lt;p&gt;This is explained in &lt;a class="reference external" href="https://stackoverflow.com/questions/43909849/tkinter-python-crashes-on-new-thread-trying-to-log-on-main-thread"&gt;another StackOverflow question&lt;/a&gt;
but I didn't like the proposed solution.
If you implement specific methods as explained (&lt;cite&gt;put_line_to_queue&lt;/cite&gt;), you lose the advantage of just calling the log function from different parts of the program.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="queuehandler"&gt;
&lt;h2&gt;QueueHandler&lt;/h2&gt;
&lt;p&gt;Using a &lt;a class="reference external" href="https://docs.python.org/3/library/queue.html"&gt;Queue&lt;/a&gt; is indeed the way to share data between threads.
So I implemented a simple QueueHandler:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class QueueHandler(logging.Handler):
    """Class to send logging records to a queue

    It can be used from different threads
    """

    def __init__(self, log_queue):
        super().__init__()
        self.log_queue = log_queue

    def emit(self, record):
        self.log_queue.put(record)
&lt;/pre&gt;
&lt;p&gt;The handler only puts the message in a queue.
I created a &lt;cite&gt;ConsoleUi&lt;/cite&gt; class to poll the messages from the queue and display them in a scrolled
text widget:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
logger = logging.getLogger(__name__)


class ConsoleUi:
    """Poll messages from a logging queue and display them in a scrolled text widget"""

    def __init__(self, frame):
        self.frame = frame
        # Create a ScrolledText wdiget
        self.scrolled_text = ScrolledText(frame, state='disabled', height=12)
        self.scrolled_text.grid(row=0, column=0, sticky=(N, S, W, E))
        self.scrolled_text.configure(font='TkFixedFont')
        self.scrolled_text.tag_config('INFO', foreground='black')
        self.scrolled_text.tag_config('DEBUG', foreground='gray')
        self.scrolled_text.tag_config('WARNING', foreground='orange')
        self.scrolled_text.tag_config('ERROR', foreground='red')
        self.scrolled_text.tag_config('CRITICAL', foreground='red', underline=1)
        # Create a logging handler using a queue
        self.log_queue = queue.Queue()
        self.queue_handler = QueueHandler(self.log_queue)
        formatter = logging.Formatter('%(asctime)s: %(message)s')
        self.queue_handler.setFormatter(formatter)
        logger.addHandler(self.queue_handler)
        # Start polling messages from the queue
        self.frame.after(100, self.poll_log_queue)

    def display(self, record):
        msg = self.queue_handler.format(record)
        self.scrolled_text.configure(state='normal')
        self.scrolled_text.insert(tk.END, msg + '\n', record.levelname)
        self.scrolled_text.configure(state='disabled')
        # Autoscroll to the bottom
        self.scrolled_text.yview(tk.END)

    def poll_log_queue(self):
        # Check every 100ms if there is a new message in the queue to display
        while True:
            try:
                record = self.log_queue.get(block=False)
            except queue.Empty:
                break
            else:
                self.display(record)
        self.frame.after(100, self.poll_log_queue)
&lt;/pre&gt;
&lt;p&gt;I can safely use the logger from different threads because only a queue is passed with the handler, no tkinter widget.&lt;/p&gt;
&lt;p&gt;To demonstrate that, I created a separate thread to display the time every seconds:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class Clock(threading.Thread):
    """Class to display the time every seconds

    Every 5 seconds, the time is displayed using the logging.ERROR level
    to show that different colors are associated to the log levels
    """

    def __init__(self):
        super().__init__()
        self._stop_event = threading.Event()

    def run(self):
        logger.debug('Clock started')
        previous = -1
        while not self._stop_event.is_set():
            now = datetime.datetime.now()
        while not self._stop_event.is_set():
            now = datetime.datetime.now()
            if previous != now.second:
                previous = now.second
                if now.second % 5 == 0:
                    level = logging.ERROR
                else:
                    level = logging.INFO
                logger.log(level, now)
            time.sleep(0.2)

    def stop(self):
        self._stop_event.set()
&lt;/pre&gt;
&lt;p&gt;The full code is available on &lt;a class="reference external" href="https://github.com/beenje/tkinter-logging-text-widget"&gt;github&lt;/a&gt;.
If you checkout the version v0.1.0 and run it, you'll see something like that:&lt;/p&gt;
&lt;img alt="/images/tkinter/logging_handler.png" src="http://beenje.github.io/blog/images/tkinter/logging_handler.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="pane-layout"&gt;
&lt;h2&gt;3-pane layout&lt;/h2&gt;
&lt;p&gt;The &lt;cite&gt;ConsoleUi&lt;/cite&gt; class takes a frame as argument. It makes it easy to
integrate in another layout. Let's see an example with a &lt;a class="reference external" href="http://www.tkdocs.com/tutorial/complex.html#panedwindow"&gt;Paned Window
widget&lt;/a&gt; to
implement the common 3-pane layout.&lt;/p&gt;
&lt;p&gt;Let's first create two new classes. The first one will be used to display
a simple form to send a message via logging. The user can select the
desired logging level:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class FormUi:

    def __init__(self, frame):
        self.frame = frame
        # Create a combobbox to select the logging level
        values = ['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL']
        self.level = tk.StringVar()
        ttk.Label(self.frame, text='Level:').grid(column=0, row=0, sticky=W)
        self.combobox = ttk.Combobox(
            self.frame,
            textvariable=self.level,
            width=25,
            state='readonly',
            values=values
        )
        self.combobox.current(0)
        self.combobox.grid(column=1, row=0, sticky=(W, E))
        # Create a text field to enter a message
        self.message = tk.StringVar()
        ttk.Label(self.frame, text='Message:').grid(column=0, row=1, sticky=W)
        ttk.Entry(self.frame, textvariable=self.message, width=25).grid(column=1, row=1, sticky=(W, E))
        # Add a button to log the message
        self.button = ttk.Button(self.frame, text='Submit', command=self.submit_message)
        self.button.grid(column=1, row=2, sticky=W)

    def submit_message(self):
        # Get the logging level numeric value
        lvl = getattr(logging, self.level.get())
        logger.log(lvl, self.message.get())
&lt;/pre&gt;
&lt;p&gt;The other class is a dummy one to show the 3-pane layout:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class ThirdUi:

    def __init__(self, frame):
        self.frame = frame
        ttk.Label(self.frame, text='This is just an example of a third frame').grid(column=0, row=1, sticky=W)
        ttk.Label(self.frame, text='With another line here!').grid(column=0, row=4, sticky=W)
&lt;/pre&gt;
&lt;p&gt;With those new classes, the only change required is in the &lt;cite&gt;App&lt;/cite&gt; class to
create a vertical and horizontal &lt;cite&gt;ttk.PanedWindow&lt;/cite&gt;.
The horizontal pane is splitted in two frames (the form and console):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
 class App:

     def __init__(self, root):
@@ -109,11 +148,24 @@ class App:
         root.title('Logging Handler')
         root.columnconfigure(0, weight=1)
         root.rowconfigure(0, weight=1)
-        console_frame = ttk.Frame(root)
-        console_frame.grid(column=0, row=0, sticky=(N, W, E, S))
+        # Create the panes and frames
+        vertical_pane = ttk.PanedWindow(self.root, orient=VERTICAL)
+        vertical_pane.grid(row=0, column=0, sticky="nsew")
+        horizontal_pane = ttk.PanedWindow(vertical_pane, orient=HORIZONTAL)
+        vertical_pane.add(horizontal_pane)
+        form_frame = ttk.Labelframe(horizontal_pane, text="MyForm")
+        form_frame.columnconfigure(1, weight=1)
+        horizontal_pane.add(form_frame, weight=1)
+        console_frame = ttk.Labelframe(horizontal_pane, text="Console")
         console_frame.columnconfigure(0, weight=1)
         console_frame.rowconfigure(0, weight=1)
+        horizontal_pane.add(console_frame, weight=1)
+        third_frame = ttk.Labelframe(vertical_pane, text="Third Frame")
+        vertical_pane.add(third_frame, weight=1)
+        # Initialize all frames
+        self.form = FormUi(form_frame)
         self.console = ConsoleUi(console_frame)
+        self.third = ThirdUi(third_frame)
         self.clock = Clock()
         self.clock.start()
         self.root.protocol('WM_DELETE_WINDOW', self.quit)
&lt;/pre&gt;
&lt;p&gt;Note that the &lt;cite&gt;Clock&lt;/cite&gt; and &lt;cite&gt;ConsoleUi&lt;/cite&gt; classes were left untouched.
We just pass a &lt;cite&gt;ttk.LabelFrame&lt;/cite&gt; instead of a &lt;cite&gt;ttk.Frame&lt;/cite&gt; to the &lt;cite&gt;ConsoleUi&lt;/cite&gt;
class.&lt;/p&gt;
&lt;p&gt;This looks more like what could be a real application:&lt;/p&gt;
&lt;img alt="/images/tkinter/paned_window.png" src="http://beenje.github.io/blog/images/tkinter/paned_window.png"&gt;
&lt;p&gt;The main window and the different panes can be resized nicely:&lt;/p&gt;
&lt;img alt="/images/tkinter/paned_window_resized.png" src="http://beenje.github.io/blog/images/tkinter/paned_window_resized.png"&gt;
&lt;p&gt;As already mentioned, the full example is available on &lt;a class="reference external" href="https://github.com/beenje/tkinter-logging-text-widget"&gt;github&lt;/a&gt;.
You can checkout the version v0.2.0 to see the 3-pane layout.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I want to give some credit to &lt;a class="reference external" href="https://docs.python.org/3.6/library/tkinter.html"&gt;tkinter&lt;/a&gt;. It doesn't have a steep learning curve and allows to easily create some nice GUI.
You can continue using what you know in Python (Queue, Threads, modules like &lt;a class="reference external" href="http://pyserial.readthedocs.io/en/latest/"&gt;pySerial&lt;/a&gt;).
I can only recomment it if you are familiar with Python and want to create a simple GUI.
That being said, I'll probably try to dive more in &lt;a class="reference external" href="https://riverbankcomputing.com/software/pyqt/intro"&gt;PyQt&lt;/a&gt; when I have more time.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>gui</category><category>python</category><category>tkinter</category><guid>http://beenje.github.io/blog/posts/logging-to-a-tkinter-scrolledtext-widget/</guid><pubDate>Thu, 28 Dec 2017 20:31:25 GMT</pubDate></item><item><title>Experimenting with asyncio on a Raspberry Pi</title><link>http://beenje.github.io/blog/posts/experimenting-with-asyncio-on-a-raspberry-pi/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;In a previous post, I described how I built a &lt;a class="reference external" href="http://beenje.github.io/blog/posts/my-lego-macintosh-classic-with-raspberry-pi-and-e-paper-display"&gt;LEGO Macintosh Classic with
a Raspberry Pi and e-paper display&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For testing purpose I installed the clock demo which is part of the
&lt;a class="reference external" href="https://github.com/embeddedartists/gratis"&gt;Embedded Artists repository&lt;/a&gt;.
Of course I wanted to do more than displaying the time on this little box.
I also wanted to take advantage of the button I had integrated.&lt;/p&gt;
&lt;p&gt;One idea was to create a small web server so that I could receive and display
messages. The application would basically:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;display the time (every minute)&lt;/li&gt;
&lt;li&gt;when receiving a message, stop the clock and display the message&lt;/li&gt;
&lt;li&gt;when the button is pressed, start the clock again&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="/images/legomac/press_button.gif" src="http://beenje.github.io/blog/images/legomac/press_button.gif"&gt;
&lt;p&gt;I don't know about you, but this really makes me think &lt;strong&gt;event loop&lt;/strong&gt;!
I learnt asynchronous programming with &lt;a class="reference external" href="http://krondo.com/an-introduction-to-asynchronous-programming-and-twisted/"&gt;Dave Peticolas Twisted Introduction&lt;/a&gt;
a few years ago. If you are not familiar with asynchronous programming, I really recommend
it. I wrote a few applications using &lt;a class="reference external" href="https://twistedmatrix.com"&gt;Twisted&lt;/a&gt; but I haven't had
the opportunity to use asyncio yet. Here is a very good occasion!&lt;/p&gt;
&lt;div class="section" id="asyncio"&gt;
&lt;h2&gt;asyncio&lt;/h2&gt;
&lt;div class="section" id="rest-api-using-aiohttp"&gt;
&lt;h3&gt;REST API using aiohttp&lt;/h3&gt;
&lt;p&gt;There are already several asyncio web frameworks to build an HTTP server.
I decided to go with &lt;a class="reference external" href="http://aiohttp.readthedocs.io/en/stable/"&gt;aiohttp&lt;/a&gt;
which is kind of the default one.&lt;/p&gt;
&lt;p&gt;Using this &lt;a class="reference external" href="http://steelkiwi.com/blog/jwt-authorization-python-part-1-practise/"&gt;tutorial&lt;/a&gt; I
wrote a simple REST API using aiohttp. It uses JSON Web Tokens which is
something else I have been wanted to try.&lt;/p&gt;
&lt;p&gt;The API has only 3 endpoints:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def setup_routes(app):
    app.router.add_get('/', index)
    app.router.add_post('/login', login)
    app.router.add_post('/messages', post_message)
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;cite&gt;/&lt;/cite&gt; to check that our token is valid&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/login&lt;/cite&gt; to login&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/messages&lt;/cite&gt; to post messages&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
async def login(request):
    config = request.app['config']
    data = await request.json()
    try:
        user = data['username']
        passwd = data['password']
    except KeyError:
        return web.HTTPBadRequest(reason='Invalid arguments')
    # We have only one user hard-coded in the config file...
    if user != config['username'] or passwd != config['password']:
        return web.HTTPBadRequest(reason='Invalid credentials')
    payload = {
        'user_id': 1,
        'exp': datetime.datetime.utcnow() + datetime.timedelta(seconds=config['jwt_exp_delta_seconds'])
    }
    jwt_token = jwt.encode(payload, config['jwt_secret'], config['jwt_algorithm'])
    logger.debug(f'JWT token created for {user}')
    return web.json_response({'token': jwt_token.decode('utf-8')})


@login_required
async def post_message(request):
    if request.content_type != 'application/json':
        return web.HTTPBadRequest()
    data = await request.json()
    try:
        message = data['message']
    except KeyError:
        return web.HTTPBadRequest()
    logger.debug(f'Message received from {request.user}: {message}')
    return web.json_response({'message': message}, status=201)


@login_required
async def index(request):
    return web.json_response({'message': 'Welcome to LegoMac {}!'.format(request.user)})
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="raspberry-pi-gpio-and-asyncio"&gt;
&lt;h3&gt;Raspberry Pi GPIO and asyncio&lt;/h3&gt;
&lt;p&gt;The default Python package to control the Raspberry Pi GPIO seems to be
&lt;a class="reference external" href="https://pypi.python.org/pypi/RPi.GPIO"&gt;RPi.GPIO&lt;/a&gt;.
That's at least what is used in the &lt;a class="reference external" href="https://github.com/embeddedartists/gratis/blob/master/PlatformWithOS/demo/ImageDemoButton.py"&gt;ImageDemoButton.py from Embedded Artists&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An alternative is the &lt;a class="reference external" href="http://abyz.co.uk/rpi/pigpio/index.html"&gt;pigpio library&lt;/a&gt;
which provides a daemon to access the Raspberry Pi GPIO via a pipe or socket interface.
And someone (Pierre Rust) already created an aysncio based Python client
for the pigpio daemon: &lt;a class="reference external" href="https://github.com/PierreRust/apigpio"&gt;apigpio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exactly what I needed!
It's basically a (incomplete) port of the original Python client provided
with pigpio, but far sufficient for my need. I just want to get a
notification when pressing the button on top of the screen.&lt;/p&gt;
&lt;p&gt;There is an example how to achieve that: &lt;a class="reference external" href="https://github.com/PierreRust/apigpio/blob/master/samples/gpio_notification.py"&gt;gpio_notification.py&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-paper-display-and-asyncio"&gt;
&lt;h3&gt;E-paper display and asyncio&lt;/h3&gt;
&lt;p&gt;The last remaining piece is to make the e-paper display play nicely with
asyncio.&lt;/p&gt;
&lt;p&gt;The EPD driver uses the fuse library. It allows the display to be
represented as a virtual directory of files. So sending a command
consists of writing to a file.&lt;/p&gt;
&lt;p&gt;There is a library to add file support to asyncio: &lt;a class="reference external" href="https://github.com/Tinche/aiofiles"&gt;aiofiles&lt;/a&gt;.
The only thing I had to do was basically to wrap the file IO in &lt;a class="reference external" href="https://github.com/embeddedartists/gratis/blob/master/PlatformWithOS/demo/EPD.py"&gt;EPD.py&lt;/a&gt;
with aiofiles:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
async def _command(self, c):
    async with aiofiles.open(os.path.join(self._epd_path, 'command'), 'wb') as f:
        await f.write(c)
&lt;/pre&gt;
&lt;p&gt;You can't use &lt;cite&gt;await&lt;/cite&gt; in a class &lt;cite&gt;__init__&lt;/cite&gt; method. So following some recommendations
from &lt;a class="reference external" href="https://stackoverflow.com/questions/33128325/how-to-set-class-attribute-with-await-in-init"&gt;stackoverflow&lt;/a&gt;,
I used the factory pattern and moved the actions requiring some IO to a classmethod:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
@classmethod
async def create(cls, *args, **kwargs):
    self = EPD(*args, **kwargs)
    async with aiofiles.open(os.path.join(self._epd_path, 'version')) as f:
        version = await f.readline()
        self._version = version.rstrip('\n')
    async with aiofiles.open(os.path.join(self._epd_path, 'panel')) as f:
        line = await f.readline()
        m = self.PANEL_RE.match(line.rstrip('\n'))
        if m is None:
            raise EPDError('invalid panel string')
        ...
&lt;/pre&gt;
&lt;p&gt;To create an instance of the EPD class, use:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
epd = await EPD.create([path='/path/to/epd'], [auto=boolean])
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="putting-everything-together-with-aiohttp"&gt;
&lt;h2&gt;Putting everything together with aiohttp&lt;/h2&gt;
&lt;div class="section" id="running-the-clock-as-a-background-task"&gt;
&lt;h3&gt;Running the clock as a background task&lt;/h3&gt;
&lt;p&gt;For the clock, I adapted the &lt;a class="reference external" href="https://github.com/embeddedartists/gratis/blob/master/PlatformWithOS/demo/Clock27.py"&gt;clock demo&lt;/a&gt;
from Embedded Artists repository.&lt;/p&gt;
&lt;p&gt;As described in aiohttp documentation I created a &lt;a class="reference external" href="http://aiohttp.readthedocs.io/en/stable/web.html#background-tasks"&gt;background task&lt;/a&gt; to display the clock
every minute:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
async def display_clock(app):
    """Background task to display clock every minute"""
    clock = Clock(app['epd'])
    first_start = True
    try:
        while True:
            while True:
                now = datetime.datetime.today()
                if now.second == 0 or first_start:
                    first_start = False
                    break
                await asyncio.sleep(0.5)
            logger.debug('display clock')
            await clock.display(now)
    except asyncio.CancelledError:
        logger.debug('display clock cancel')


async def start_background_tasks(app):
     app['epd'] = await EPD.create(auto=True)
     app['clock'] = app.loop.create_task(display_clock(app))


async def cleanup_background_tasks(app):
    app['clock'].cancel()
    await app['clock']


def init_app():
    """Create and return the aiohttp Application object"""
    app = web.Application()
    app.on_startup.append(start_background_tasks)
    app.on_cleanup.append(cleanup_background_tasks)
    ...
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="stop-the-clock-and-display-a-message"&gt;
&lt;h3&gt;Stop the clock and display a message&lt;/h3&gt;
&lt;p&gt;When receiving a message, I first cancel the clock background task and
send the messages to the e-paper display using &lt;cite&gt;ensure_future&lt;/cite&gt; so that
I can return a json response without having to wait for the message to be
displayed as it takes about 5 seconds:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
@login_required
async def post_message(request):
    if request.content_type != 'application/json':
        return web.HTTPBadRequest()
    data = await request.json()
    try:
        message = data['message']
    except KeyError:
        return web.HTTPBadRequest()
    # cancel the display clock
    request.app['clock'].cancel()
    logger.debug(f'Message received from {request.user}: {message}')
    now = datetime.datetime.now(request.app['timezone'])
    helpers.ensure_future(request.app['epd'].display_message(message, request.user, now))
    return web.json_response({'message': message}, status=201)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="start-the-clock-when-pressing-the-button"&gt;
&lt;h3&gt;Start the clock when pressing the button&lt;/h3&gt;
&lt;p&gt;To be able to restart the clock when pressing the button, I connect to the
pigpiod when starting the app (in &lt;cite&gt;start_background_tasks&lt;/cite&gt;) and register
the &lt;cite&gt;on_input&lt;/cite&gt; callback:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
async def start_background_tasks(app):
    app['pi'] = apigpio.Pi(app.loop)
    address = (app['config']['pigpiod_host'], app['config']['pigpiod_port'])
    await app['pi'].connect(address)
    await app['pi'].set_mode(BUTTON_GPIO, apigpio.INPUT)
    app['cb'] = await app['pi'].add_callback(
            BUTTON_GPIO,
            edge=apigpio.RISING_EDGE,
            func=functools.partial(on_input, app))
    ...
&lt;/pre&gt;
&lt;p&gt;In the &lt;cite&gt;on_input&lt;/cite&gt; callback, I re-create the clock background task but only if the previous
task is done:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def on_input(app, gpio, level, tick):
    """Callback called when pressing the button on the e-paper display"""
    logger.info('on_input {} {} {}'.format(gpio, level, tick))
    if app['clock'].done():
        logger.info('restart clock')
        app['clock'] = app.loop.create_task(display_clock(app))
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="running-on-the-pi"&gt;
&lt;h2&gt;Running on the Pi&lt;/h2&gt;
&lt;p&gt;You might have noticed that I used some syntax that is Python 3.6 only.
I don't really see myself using something else when starting a new project
today :-)
There are so many new things (like f-strings) that make your programs look
cleaner.&lt;/p&gt;
&lt;p&gt;On raspbian, if you install Python 3, you get 3.4... So how do you get Python 3.6 on
a Raspberry Pi?&lt;/p&gt;
&lt;p&gt;On desktop/server I usually use &lt;a class="reference external" href="https://conda.io/miniconda.html"&gt;conda&lt;/a&gt;. It makes it so easy to install
the Python version you want and many dependencies.
There are no official installer for the armv6 architecture but I
found &lt;a class="reference external" href="https://github.com/jjhelmus/berryconda"&gt;berryconda&lt;/a&gt; which is a
conda based distribution for the Raspberry Pi! Really nice!&lt;/p&gt;
&lt;p&gt;Another alternative is to use &lt;a class="reference external" href="https://www.docker.com"&gt;docker&lt;/a&gt;.
There are official &lt;a class="reference external" href="https://hub.docker.com/u/arm32v6/python"&gt;arm32v6 images&lt;/a&gt;
based on alpine and some from &lt;a class="reference external" href="https://hub.docker.com/r/resin/raspberry-pi-python/"&gt;resin.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I could have gone with berryconda, but there's one thing I wanted as well.
I'll have to open the HTTP server to the outside world meaning I need
HTTPS. As mentionned in another &lt;a class="reference external" href="http://beenje.github.io/blog/post/running-your-application-over-https-with-traefik"&gt;post&lt;/a&gt;, &lt;a class="reference external" href="https://traefik.io"&gt;traefik&lt;/a&gt; makes
that very easy if you use docker. So that's what I chose.&lt;/p&gt;
&lt;p&gt;I created 3 containers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;traefik&lt;/li&gt;
&lt;li&gt;pigpiod&lt;/li&gt;
&lt;li&gt;aiolegomac&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="traefik"&gt;
&lt;h3&gt;traefik&lt;/h3&gt;
&lt;p&gt;There are no official Traefik docker images for arm yet, but an &lt;a class="reference external" href="https://github.com/containous/traefik/issues/1665"&gt;issue&lt;/a&gt; is currently opened.
So it should arrive soon!&lt;/p&gt;
&lt;p&gt;In the meantime I created my own:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM arm32v6/alpine:3.6

RUN apk --update upgrade \
  &amp;amp;&amp;amp; apk --no-cache --no-progress add ca-certificates \
  &amp;amp;&amp;amp; apk add openssl \
  &amp;amp;&amp;amp; rm -rf /var/cache/apk/*

RUN wget -O /usr/local/bin/traefik https://github.com/containous/traefik/releases/download/v1.3.3/traefik_linux-arm \
  &amp;amp;&amp;amp; chmod a+x /usr/local/bin/traefik

ENTRYPOINT ["/usr/local/bin/traefik"]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="pigpiod"&gt;
&lt;h3&gt;pigpiod&lt;/h3&gt;
&lt;p&gt;For pigpiod, I first created an image based on &lt;cite&gt;arm32v6/alpine&lt;/cite&gt; but I noticed I couldn't send
a SIGTERM to the daemon to stop it properly... I'm not sure why. Alpine being based on &lt;cite&gt;musl&lt;/cite&gt; instead
of &lt;cite&gt;glibc&lt;/cite&gt; might be the problem. Here is the Dockerfile I tried:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM arm32v6/alpine:3.6

RUN apk add --no-cache --virtual .build-deps \
  gcc \
  make \
  musl-dev \
  tar \
  &amp;amp;&amp;amp; wget -O /tmp/pigpio.tar abyz.co.uk/rpi/pigpio/pigpio.tar \
  &amp;amp;&amp;amp; tar -xf /tmp/pigpio.tar -C /tmp \
  &amp;amp;&amp;amp; sed -i "/ldconfig/d" /tmp/PIGPIO/Makefile \
  &amp;amp;&amp;amp; make -C /tmp/PIGPIO \
  &amp;amp;&amp;amp; make -C /tmp/PIGPIO install \
  &amp;amp;&amp;amp; rm -rf /tmp/PIGPIO /tmp/pigpio.tar \
  &amp;amp;&amp;amp; apk del .build-deps

EXPOSE 8888

ENTRYPOINT ["/usr/local/bin/pigpiod", "-g"]
&lt;/pre&gt;
&lt;p&gt;I even tried using &lt;a class="reference external" href="https://github.com/krallin/tini"&gt;tini&lt;/a&gt; as entrypoint without luck.
So if someone as the explanation, please share it in the comments.&lt;/p&gt;
&lt;p&gt;I tried with &lt;cite&gt;resin/rpi-raspbian&lt;/cite&gt; image and I got it working properly right away:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM resin/rpi-raspbian:jessie

RUN apt-get update \
  &amp;amp;&amp;amp; apt-get install -y \
     make \
     gcc \
     libc6-dev \
  &amp;amp;&amp;amp; apt-get clean \
  &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

RUN curl -o /tmp/pigpio.tar abyz.co.uk/rpi/pigpio/pigpio.tar \
  &amp;amp;&amp;amp; tar -xf /tmp/pigpio.tar -C /tmp \
  &amp;amp;&amp;amp; make -C /tmp/PIGPIO \
  &amp;amp;&amp;amp; make -C /tmp/PIGPIO install \
  &amp;amp;&amp;amp; rm -rf /tmp/pigpio.tar /tmp/PIGPIO

EXPOSE 8888

ENTRYPOINT ["/usr/local/bin/pigpiod", "-g"]
&lt;/pre&gt;
&lt;p&gt;Note that the container has to run in privileged mode to access the GPIO.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="aiolegomac"&gt;
&lt;h3&gt;aiolegomac&lt;/h3&gt;
&lt;p&gt;For the main application, the Dockerfile is quite standard for a Python application:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM resin/raspberry-pi-python:3.6

RUN apt-get update \
  &amp;amp;&amp;amp; apt-get install -y \
     fonts-liberation \
     fonts-dejavu  \
     libjpeg-dev \
     libfreetype6-dev \
     libtiff5-dev \
     liblcms2-dev \
     libwebp-dev \
     zlib1g-dev \
     libyaml-0-2 \
  &amp;amp;&amp;amp; apt-get autoremove \
  &amp;amp;&amp;amp; apt-get clean \
  &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY requirements.txt /app/requirements.txt
RUN python -m venv /opt/legomac \
  &amp;amp;&amp;amp; /opt/legomac/bin/pip install -r requirements.txt

COPY . /app

ENTRYPOINT ["/opt/legomac/bin/python"]
CMD ["run.py"]
&lt;/pre&gt;
&lt;p&gt;What about the EPD driver?
As it uses libfuse to represent the e-paper display as a virtual directory of files,
the easiest was to install it on the host and to mount it as a volume inside the docker
container.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="deployment"&gt;
&lt;h2&gt;Deployment&lt;/h2&gt;
&lt;p&gt;To install all that on the Pi, I wrote a small &lt;a class="reference external" href="https://www.ansible.com"&gt;Ansible&lt;/a&gt; playbook.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Configure the Pi as described in my &lt;a class="reference external" href="http://beenje.github.io/blog/posts/my-lego-macintosh-classic-with-raspberry-pi-and-e-paper-display"&gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Clone the playbook:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone https://github.com/beenje/legomac.git
$ cd legomac
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a file &lt;cite&gt;host_vars/legomac&lt;/cite&gt; with your variables (assuming the hostname of the Pi is legomac):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aiolegomac_hostname: myhost.example.com
aiolegomac_username: john
aiolegomac_password: mypassword
aiolegomac_jwt_secret: secret
traefik_letsencrypt_email: youremail@example.com
traefik_letsencrypt_production: true
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Run the playbook:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ansible-playbook -i hosts -k playbook.yml
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This will install docker and the EPD driver, download the &lt;a class="reference external" href="https://github.com/beenje/aiolegomac"&gt;aiolegomac repository&lt;/a&gt;, build the 3 docker images
and start everything.&lt;/p&gt;
&lt;p&gt;Building the main application docker image on a Raspberry Pi Zero takes quite some time.
So be patient :-) Just go and do something else.&lt;/p&gt;
&lt;p&gt;When the full playbook is complete (it took about 55 minutes for me),
you'll have a server with HTTPS support (thanks to Let's Encrypt) running on the Pi. It's displaying
the clock every minute and you can send messages to it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client"&gt;
&lt;h2&gt;Client&lt;/h2&gt;
&lt;div class="section" id="httpie"&gt;
&lt;h3&gt;HTTPie&lt;/h3&gt;
&lt;p&gt;To test the server you can of course use &lt;a class="reference external" href="https://curl.haxx.se"&gt;curl&lt;/a&gt;
but I really like &lt;a class="reference external" href="https://httpie.org"&gt;HTTPie&lt;/a&gt;. It's much more user
friendly.&lt;/p&gt;
&lt;p&gt;Let's try to access our new server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ http GET https://myhost.example.com
HTTP/1.1 401 Unauthorized
Content-Length: 25
Content-Type: application/json; charset=utf-8
Date: Sun, 16 Jul 2017 06:22:42 GMT
Server: Python/3.6 aiohttp/2.2.3

{
    "error": "Unauthorized"
}
&lt;/pre&gt;
&lt;p&gt;Good, we need to login:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ http POST https://myhost.example.com/login username=john password=foo
HTTP/1.1 400 Bad Request
Content-Length: 32
Content-Type: application/json; charset=utf-8
Date: Sun, 16 Jul 2017 06:18:39 GMT
Server: Python/3.6 aiohttp/2.2.3

{
    "error": "Invalid credentials"
}
&lt;/pre&gt;
&lt;p&gt;Oops, wrong password:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ http POST https://myhost.example.com/login username=john password='mypassword'
HTTP/1.1 200 OK
Content-Length: 134
Content-Type: application/json; charset=utf-8
Date: Sun, 16 Jul 2017 06:21:14 GMT
Server: Python/3.6 aiohttp/2.2.3

{
    "token": "eyK0eXAiOiJRV5QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VyX2lkIjoxLCJleHAiOjE1MDB5MTIwOTh9.hECnj4u2mxvZ2r8IEC-db1T-eKTplM4kWJKZoHhtLxQ"
}
&lt;/pre&gt;
&lt;p&gt;We got a token that we can use:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ http GET https://myhost.example.com 'Authorization: eyK0eXAiOiJRV5QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VyX2lkIjoxLCJleHAiOjE1MDB5MTIwOTh9.hECnj4u2mxvZ2r8IEC-db1T-eKTplM4kWJKZoHhtLxQ'
HTTP/1.1 200 OK
Content-Length: 43
Content-Type: application/json; charset=utf-8
Date: Sun, 16 Jul 2017 06:22:25 GMT
Server: Python/3.6 aiohttp/2.2.3

{
    "message": "Welcome to LegoMac john!"
}
&lt;/pre&gt;
&lt;p&gt;Authentication is working, so we can send a message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ http POST https://myhost.example.com/messages message='Hello World!' 'Authorization: eyK0eXAiOiJRV5QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VyX2lkIjoxLCJleHAiOjE1MDB5MTIwOTh9.hECnj4u2mxvZ2r8IEC-db1T-eKTplM4kWJKZoHhtLxQ'
HTTP/1.1 201 Created
Content-Length: 27
Content-Type: application/json; charset=utf-8
Date: Sun, 16 Jul 2017 06:23:46 GMT
Server: Python/3.6 aiohttp/2.2.3

{
    "message": "Hello World!"
}
&lt;/pre&gt;
&lt;p&gt;Message sent!
HTTPie is nice for testing, but we can make a small script to easily send messages from the command line.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="requests"&gt;
&lt;h3&gt;requests&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.python-requests.org"&gt;requests&lt;/a&gt; is of course the HTTP library to use in Python.&lt;/p&gt;
&lt;p&gt;So let's write a small script to send messages to our server.
We'll store the server url and username to use in a small yaml configuration file.
If we don't have a token yet or if the saved one is no longer valid,
the script will retrieve one after prompting us for a password.
The token is saved in the configuration file for later use.&lt;/p&gt;
&lt;p&gt;The following script could be improved with some nicer error messages
by catching exceptions. But it does the job:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import os
import click
import requests
import yaml


def get_config(filename):
    with open(filename) as f:
        config = yaml.load(f)
    return config


def save_config(filename, config):
    with open(filename, 'w') as f:
        yaml.dump(config, f, default_flow_style=False)


def get_token(url, username):
    password = click.prompt('Password', hide_input=True)
    payload = {'username': username, 'password': password}
    r = requests.post(url + '/login', json=payload)
    r.raise_for_status()
    return r.json()['token']


def send_message(url, token, message):
    payload = {'message': message}
    headers = {'Authorization': token}
    r = requests.post(url + '/messages', json=payload, headers=headers)
    r.raise_for_status()


@click.command()
@click.option('--conf', '-c', default='~/.pylegomac.yml',
              help='Configuration file [default: "~/.pylegomac.yml"]')
@click.argument('message')
@click.version_option()
def pylegomac(message, conf):
    """Send message to aiolegomac server"""
    filename = os.path.expanduser(conf)
    config = get_config(filename)
    url = config['url']
    username = config['username']
    if 'token' in config:
        try:
            send_message(url, config['token'], message)
        except requests.exceptions.HTTPError as err:
            # Token no more valid
            pass
        else:
            click.echo('Message sent')
            return
    token = get_token(url, username)
    send_message(url, token, message)
    config['token'] = token
    save_config(filename, config)


if __name__ == '__main__':
    pylegomac()
&lt;/pre&gt;
&lt;p&gt;Let's first create a configuration file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cat ~/.pylegomac.yml
url: https://myhost.example.com
username: john
&lt;/pre&gt;
&lt;p&gt;Send a message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python pylegomac.py 'Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated.'
Password:
Message sent
&lt;/pre&gt;
&lt;img alt="/images/legomac/zen_of_python.jpg" src="http://beenje.github.io/blog/images/legomac/zen_of_python.jpg"&gt;
&lt;p&gt;Sending a new message won't request the password as the token was saved in the config file.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I have a nice little aiohttp server running on my Raspberry Pi that can receive and display messages.
asyncio is quite pleasant to work with. I really like the async/await syntax.&lt;/p&gt;
&lt;p&gt;All the code is on github:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/beenje/aiolegomac"&gt;aiolegomac&lt;/a&gt; (the server and client script)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/beenje/legomac"&gt;legomac&lt;/a&gt; (the Ansible playbook to deploy the server)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why did I only write a command line script to send messages and no web interface?
Don't worry, that's planned! I could have used Jinja2. But I'd like to try a javascript framework.
So that will be the subject of another post.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>Ansible</category><category>docker</category><category>lego</category><category>pi</category><category>python</category><guid>http://beenje.github.io/blog/posts/experimenting-with-asyncio-on-a-raspberry-pi/</guid><pubDate>Tue, 18 Jul 2017 20:46:17 GMT</pubDate></item><item><title>Running your application over HTTPS with traefik</title><link>http://beenje.github.io/blog/posts/running-your-application-over-https-with-traefik/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;I just read another very clear article from Miguel Grinberg about &lt;a class="reference external" href="https://blog.miguelgrinberg.com/post/running-your-flask-application-over-https"&gt;Running Your Flask
Application Over HTTPS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the title suggests, it describes different ways to run a flask application over HTTPS.
I have been using &lt;a class="reference external" href="http://flask.pocoo.org"&gt;flask&lt;/a&gt; for quite some time, but I didn't even know about
the &lt;cite&gt;ssl_context&lt;/cite&gt; argument. You should definitively check his article!&lt;/p&gt;
&lt;p&gt;Using &lt;a class="reference external" href="https://nginx.org/en/"&gt;nginx&lt;/a&gt; as a reverse proxy with a self-signed certificate or &lt;a class="reference external" href="https://letsencrypt.org"&gt;Let’s
Encrypt&lt;/a&gt; are two options I have been using in the
past.&lt;/p&gt;
&lt;p&gt;If your app is available on the internet, you should definitively use
Let's Encrypt. But if your app is only supposed to be used internally
on a private network, a self-signed certificate is an option.&lt;/p&gt;
&lt;div class="section" id="traefik"&gt;
&lt;h2&gt;Traefik&lt;/h2&gt;
&lt;p&gt;I now often use &lt;a class="reference external" href="https://www.docker.com"&gt;docker&lt;/a&gt; to deploy my applications.
I was looking for a way to automatically configure Let's Encrypt.
I initially found &lt;a class="reference external" href="https://github.com/jwilder/nginx-proxy"&gt;nginx-proxy&lt;/a&gt;
and &lt;a class="reference external" href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion"&gt;docker-letsencrypt-nginx-proxy-companion&lt;/a&gt;. This
was interesting but wasn't that straight forward to setup.&lt;/p&gt;
&lt;p&gt;I then discovered &lt;a class="reference external" href="https://traefik.io"&gt;traefik&lt;/a&gt;: "a modern HTTP reverse proxy
and load balancer made to deploy microservices with ease". And that's
really the case! I've used it to deploy several applications and I
was impressed. It's written in go, so single binary. There is also a tiny docker
image that makes it easy to deploy. It includes Let's Encrypt support (with automatic renewal),
websocket support (no specific setup required)... And many other features.&lt;/p&gt;
&lt;p&gt;Here is a &lt;cite&gt;traefik.toml&lt;/cite&gt; configuration example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
defaultEntryPoints = ["http", "https"]

[web]
# Port for the status page
address = ":8080"

# Entrypoints, http and https
[entryPoints]
  # http should be redirected to https
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  # https is the default
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]

# Enable ACME (Let's Encrypt): automatic SSL
[acme]
# Email address used for registration
email = "test@traefik.io"
storageFile = "/etc/traefik/acme/acme.json"
entryPoint = "https"
onDemand = false
OnHostRule = true
  # Use a HTTP-01 acme challenge rather than TLS-SNI-01 challenge
  [acme.httpChallenge]
  entryPoint = "http"

# Enable Docker configuration backend
[docker]
endpoint = "unix:///var/run/docker.sock"
domain = "example.com"
watch = true
exposedbydefault = false
&lt;/pre&gt;
&lt;p&gt;With this simple configuration, you get:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;HTTP redirect on HTTPS&lt;/li&gt;
&lt;li&gt;Let's Encrypt support&lt;/li&gt;
&lt;li&gt;Docker backend support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UPDATE (2018-03-04): as mentioned by @jackminardi in the comments, Let's Encrypt &lt;a class="reference external" href="https://community.letsencrypt.org/t/important-what-you-need-to-know-about-tls-sni-validation-issues/50811"&gt;disabled the TLS-SNI
challenges for most new issuance&lt;/a&gt;.
Traefik added &lt;a class="reference external" href="https://github.com/containous/traefik/pull/2701"&gt;support for the HTTP-01 challenge&lt;/a&gt;. I updated the above
configuration to use this validation method: &lt;cite&gt;[acme.httpChallenge]&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-simple-example"&gt;
&lt;h2&gt;A simple example&lt;/h2&gt;
&lt;p&gt;I created a dummy example just to show how to run a flask application over
HTTPS with traefik and Let's Encrypt.
Note that traefik is made to dynamically discover backends. So you usually
don't run it with your app in the same docker-compose.yml file. It usually
runs separately. But to make it easier, I put both in the same file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
version: '2'
services:
  flask:
    build: ./flask
    image: flask
    command: uwsgi --http-socket 0.0.0.0:5000 --wsgi-file app.py --callable app
    labels:
      - "traefik.enable=true"
      - "traefik.backend=flask"
      - "traefik.frontend.rule=${TRAEFIK_FRONTEND_RULE}"
  traefik:
    image: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik/acme:/etc/traefik/acme
    ports:
     - "80:80"
     - "443:443"
     - "8080:8080"
&lt;/pre&gt;
&lt;p&gt;Traefik requires access to the docker socket to listen for changes in the
backends. It can thus automatically discover when you start and stop
containers. You can ovverride default behaviour by using labels in your
container.&lt;/p&gt;
&lt;p&gt;Supposing you own the myhost.example.com domain and have access to ports 80 and 443
(you can setup port forwarding if you run that on your machine behind a
router at home), you can run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone https://github.com/beenje/flask_traefik_letsencrypt.git
$ cd flask_traefik_letsencrypt
$ export TRAEFIK_FRONTEND_RULE=Host:myhost.example.com
$ docker-compose up
&lt;/pre&gt;
&lt;p&gt;Voilà! Our flask app is available over HTTPS with a real SSL certificate!&lt;/p&gt;
&lt;img alt="/images/flask_traefik/hello_world.png" src="http://beenje.github.io/blog/images/flask_traefik/hello_world.png"&gt;
&lt;p&gt;Traefik discovered the flask docker container and requested a certificate for our domain.
All that automatically!&lt;/p&gt;
&lt;p&gt;Traefik even comes with a nice dashboard:&lt;/p&gt;
&lt;img alt="/images/flask_traefik/traefik_dashboard.png" src="http://beenje.github.io/blog/images/flask_traefik/traefik_dashboard.png"&gt;
&lt;p&gt;With this simple configuration, &lt;a class="reference external" href="https://www.ssllabs.com/index.html"&gt;Qualys SSL Labs&lt;/a&gt;
gave me an A rating :-)&lt;/p&gt;
&lt;img alt="/images/flask_traefik/traefik_ssl_report.png" src="http://beenje.github.io/blog/images/flask_traefik/traefik_ssl_report.png"&gt;
&lt;p&gt;Not as good as the A+ for Miguel's site, but not that bad!
Especially considering there isn't any specific SSL setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-more-realistic-deployment"&gt;
&lt;h2&gt;A more realistic deployment&lt;/h2&gt;
&lt;p&gt;As I already mentioned, traefik is made to automatically discover backends (docker containers in my case).
So you usually run it by itself.&lt;/p&gt;
&lt;p&gt;Here is an example how it can be deployed using &lt;a class="reference external" href="http://docs.ansible.com/ansible/"&gt;Ansible&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
---
- name: create traefik directories
  file:
    path: /etc/traefik/acme
    state: directory
    owner: root
    group: root
    mode: 0755

- name: create traefik.toml
  template:
    src: traefik.toml.j2
    dest: /etc/traefik/traefik.toml
    owner: root
    group: root
    mode: 0644
  notify:
    - restart traefik

- name: create traefik network
  docker_network:
    name: "{{traefik_network}}"
    state: present

- name: launch traefik container with letsencrypt support
  docker_container:
    name: traefik_proxy
    image: "traefik:{{traefik_version}}"
    state: started
    restart_policy: always
    ports:
      - "80:80"
      - "443:443"
      - "{{traefik_dashboard_port}}:8080"
    volumes:
      - /etc/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - /etc/traefik/acme:/etc/traefik/acme:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # purge networks so that the container is only part of
    # {{traefik_network}} (and not the default bridge network)
    purge_networks: yes
    networks:
      - name: "{{traefik_network}}"

- name: force all notified handlers to run
  meta: flush_handlers
&lt;/pre&gt;
&lt;p&gt;Nothing strange here. It's quite similar to what we had in our docker-compose.yml file.
We created a specific &lt;cite&gt;traefik_network&lt;/cite&gt;. Our docker containers will have to be on that same network.&lt;/p&gt;
&lt;p&gt;Here is how we could deploy a flask application on the same server using another ansible role:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
- name: launch flask container
  docker_container:
    name: flask
    image: flask
    command: uwsgi --http-socket 0.0.0.0:5000 --wsgi-file app.py --callable app
    state: started
    restart_policy: always
    purge_networks: yes
    networks:
      - name: "{{traefik_network}}"
    labels:
      traefik.enable: "true"
      traefik.backend: "flask"
      traefik.frontend.rule: "Host:myhost.example.com"
      traefik.port: "5000"
&lt;/pre&gt;
&lt;p&gt;We make sure the container is on the same network as the traefik proxy.
Note that the &lt;cite&gt;traefik.port&lt;/cite&gt; label is only required if the container exposes multiple ports.
It's thus not needed in our example.&lt;/p&gt;
&lt;p&gt;That's basically it. As you can see, &lt;a class="reference external" href="https://www.docker.com"&gt;docker&lt;/a&gt; and &lt;a class="reference external" href="http://docs.ansible.com/ansible/"&gt;Ansible&lt;/a&gt; make the deployment easy.
And &lt;a class="reference external" href="https://traefik.io"&gt;traefik&lt;/a&gt; takes care of the Let's Encrypt certificate.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Traefik comes with many other features and is well &lt;a class="reference external" href="https://docs.traefik.io"&gt;documented&lt;/a&gt;.
You should check &lt;a class="reference external" href="https://docs.traefik.io/#docker"&gt;this Docker example&lt;/a&gt; that demonstrates load-balancing.
Really cool.&lt;/p&gt;
&lt;p&gt;If you use &lt;a class="reference external" href="https://www.docker.com"&gt;docker&lt;/a&gt;, you should really give &lt;a class="reference external" href="https://traefik.io"&gt;traefik&lt;/a&gt; a try!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>flask</category><category>https</category><category>python</category><category>traefik</category><guid>http://beenje.github.io/blog/posts/running-your-application-over-https-with-traefik/</guid><pubDate>Thu, 08 Jun 2017 19:49:46 GMT</pubDate></item><item><title>My LEGO Macintosh Classic with Raspberry Pi and e-paper display</title><link>http://beenje.github.io/blog/posts/my-lego-macintosh-classic-with-raspberry-pi-and-e-paper-display/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;Beginning of April I read an inspiring blog post from Jannis Hermanns
about a &lt;a class="reference external" href="https://jann.is/lego-macintosh-classic/"&gt;LEGO Machintosh Classic with e-paper display&lt;/a&gt;.  It was a really nice and cool article.&lt;/p&gt;
&lt;p&gt;I've been playing with some Raspberry Pis before but only with
&lt;a class="reference external" href="http://beenje.github.io/blog/posts/installing-openvpn-on-a-raspberry-pi-with-ansible"&gt;software&lt;/a&gt;.
I have been willing to fiddle with hardware for some time.
This was the perfect opportunity!&lt;/p&gt;
&lt;div class="section" id="lego-digital-designer"&gt;
&lt;h2&gt;LEGO Digital Designer&lt;/h2&gt;
&lt;p&gt;I decided to try to make my own LEGO Macintosh based on Jannis work.
His blog post is quite detailed with even a list of links with all the
required components.&lt;/p&gt;
&lt;p&gt;But I quickly realized there were no LEGO building instructions...
I thus created my own using LEGO Digital Designer, which was fun.
Looking at the pictures on &lt;a class="reference external" href="https://www.flickr.com/photos/_-_/33583084842"&gt;Jannis flickr album&lt;/a&gt;
helped a lot. But having an exact idea of the screen size wasn't easy on
the computer. So I also built a small prototype of the front part to get a
better idea. For that I had to wait for my e-paper display.&lt;/p&gt;
&lt;p&gt;One modification I wanted to do was to use 1U width lego on the side of
the display to require less drilling.
I also wanted to check if it was possible to use the button located on top
of the display.&lt;/p&gt;
&lt;p&gt;My .lxf file is on &lt;a class="reference external" href="https://github.com/beenje/legomac/tree/master/ldd"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/legomac_ldd.png"&gt;&lt;img alt="/images/legomac/legomac_ldd.thumbnail.png" src="http://beenje.github.io/blog/images/legomac/legomac_ldd.thumbnail.png"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="e-paper-display"&gt;
&lt;h2&gt;E-paper display&lt;/h2&gt;
&lt;p&gt;When I was about to order the &lt;a class="reference external" href="http://www.embeddedartists.com/products/displays/lcd_27_epaper.php"&gt;2.7 inch e-paper display from Embedded Artists&lt;/a&gt;, I
noticed that Embedded Artists was located in Malmö, where I live :-).&lt;/p&gt;
&lt;p&gt;I e-mailed them and I was granted to pick up my order at their office!
A big thanks to them!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="raspbery-pi-zero-w"&gt;
&lt;h2&gt;Raspbery Pi Zero W&lt;/h2&gt;
&lt;p&gt;The Raspberry Pi Zero W comes with Wifi which is really nice.
It does not come with the soldered GPIO header. I was starting to look at
existing soldering iron when I discovered this &lt;a class="reference external" href="https://shop.pimoroni.com/products/gpio-hammer-header"&gt;GPIO Hammer Header&lt;/a&gt;:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/gpio_hammer_header.jpg"&gt;&lt;img alt="/images/legomac/gpio_hammer_header.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/gpio_hammer_header.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p&gt;No soldering required!
I used the installation jig and it was really easy to install.
There is a nice &lt;a class="reference external" href="https://youtu.be/VDJ2-feg2lk"&gt;video&lt;/a&gt; that explains how
to proceed:&lt;/p&gt;
&lt;iframe width="480" height="270" src="https://www.youtube.com/embed/VDJ2-feg2lk?feature=oembed" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div class="section" id="connecting-the-display-to-the-pi"&gt;
&lt;h2&gt;Connecting the display to the Pi&lt;/h2&gt;
&lt;p&gt;Based on Jannis article I initially thought it wasn't possible to use a ribbon
cable (due to space), so I ordered some Jumper Wires.
I connected the display to the Pi using the serial expansion
connector as described in his blog post.
It worked. With the &lt;a class="reference external" href="https://github.com/embeddedartists/gratis"&gt;demo from embeddedartists&lt;/a&gt;, I managed to display a nice cat picture :-)&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/jumper_wires.jpg"&gt;&lt;img alt="/images/legomac/jumper_wires.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/jumper_wires.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/cat.jpg"&gt;&lt;img alt="/images/legomac/cat.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/cat.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p&gt;I then realized that the serial expansion connector didn't give access to
the button on top of the display. That button could allow some
interactions, like changing mode, which would be nice.
According to my prototype with 1U width lego on the side, using a ribbon cable shouldn't actually be
an issue. So I ordered a &lt;a class="reference external" href="https://thepihut.com/products/downgrade-gpio-ribbon-cable-for-raspberry-pi-40p-to-26p"&gt;Downgrade GPIO Ribbon Cable for Raspberry Pi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It required a little drilling on the right side for the cable to fit. But
not that much. More is needed on the left side to center the screen.
Carried away by my enthusiasm, I actually cut a bit too much on the left side
(using the dremel was fun :-).&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/drilling_left.jpg"&gt;&lt;img alt="/images/legomac/drilling_left.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/drilling_left.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/drilling_right.jpg"&gt;&lt;img alt="/images/legomac/drilling_right.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/drilling_right.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p&gt;Everything fitted nicely in the lego case:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/ribbon_cable.jpg"&gt;&lt;img alt="/images/legomac/ribbon_cable.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/ribbon_cable.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="button-on-top"&gt;
&lt;h2&gt;Button on top&lt;/h2&gt;
&lt;p&gt;With the ribbon cable, the button on top of the display is connected to pin
15 on the Raspberry Pi (BCM GPIO22).
The &lt;cite&gt;ImageDemoButton.py&lt;/cite&gt; part of the &lt;a class="reference external" href="https://github.com/embeddedartists/gratis"&gt;demo&lt;/a&gt;
shows an example how to use the button to change the image displayed.&lt;/p&gt;
&lt;p&gt;Using my small prototype, I planned a small hole on top of the case. I thought I'd have to fill
the brick with something hard to press the button. The 1x1 brick ended fitting perfectly.
As shown on the picture below, the side is exactly on top of the button.
I added a little piece of foam inside the brick to keep it straight.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/button_front.jpg"&gt;&lt;img alt="/images/legomac/button_front.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/button_front.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p&gt;Of course I move away from the Macintosh Classic design here...
but &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0020/"&gt;practicality beats purity&lt;/a&gt; :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pi-configuration"&gt;
&lt;h2&gt;Pi configuration&lt;/h2&gt;
&lt;p&gt;Jannis article made me discover &lt;a class="reference external" href="https://resin.io"&gt;resin.io&lt;/a&gt;,
which is a really interesting project. I did a few tests on a Raspberry Pi 3 and it was a nice experience.
But when I received my Pi Zero W, it wasn't supported by resinOS yet... This isn't the case anymore!
Version 2.0.3 added support for the wifi chip.&lt;/p&gt;
&lt;p&gt;Anyway, as Jannis already wrote about resinOS, I'll describe my tests with Raspbian.
To flash the SD card, I recommend &lt;a class="reference external" href="https://etcher.io"&gt;Etcher&lt;/a&gt; which is an open source project by the same resin.io.
I'm more a command line guy and I have used &lt;cite&gt;dd&lt;/cite&gt; many times. But I was pleasantly surprised.
It's easy to install and use.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Download and install &lt;a class="reference external" href="https://etcher.io"&gt;Etcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download &lt;a class="reference external" href="https://www.raspberrypi.org/downloads/raspbian/"&gt;Raspbian Strecth Lite image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flash the SD card using Etcher&lt;/li&gt;
&lt;li&gt;Mount the SD card to configure it:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="literal-block"&gt;
# Go to the boot partition
# This is an example on OSX (mount point will be different on Linux)
$ cd /Volumes/boot

# To enable ssh, create a file named ssh onto the boot partition
$ touch ssh

# Create the file wpa_supplicant.conf with your wifi settings
# Note that for Raspbian Stretch, you need the first line
# (ctrl_interface...)! This was not the case for Jessie.
$  cat &amp;lt;&amp;lt; EOF &amp;gt; wpa_supplicant.conf
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
network={
    ssid="MyWifiNetwork"
    psk="password"
    key_mgmt=WPA-PSK
}
EOF

# Uncomment dtparam=spi=on to enable the SPI master driver
$ vi config.txt

# Leave the boot partition
$ cd
&lt;/pre&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Unmount the SD card and put it in the Raspberry Pi&lt;/li&gt;
&lt;li&gt;Boot the Pi&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I wrote a small Ansible playbook to install the E-ink driver and the clock demo:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
- name: install required dependencies
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  with_items:
    - git
    - libfuse-dev
    - fonts-liberation
    - python-pil

- name: check if the epd-fuse service exists
  command: systemctl status epd-fuse.service
  check_mode: no
  failed_when: False
  changed_when: False
  register: epd_fuse_service

- name: clone the embeddedartists gratis repository
  git:
    repo: https://github.com/embeddedartists/gratis.git
    dest: /home/pi/gratis

- name: build the EPD driver and install the epd-fuse service
  shell: &amp;gt;
    COG_VERSION=V2 make rpi-epd_fuse &amp;amp;&amp;amp;
    COG_VERSION=V2 make rpi-install
  args:
    chdir: /home/pi/gratis/PlatformWithOS
  when: epd_fuse_service.rc != 0

- name: ensure the epd-fuse service is enabled and started
  service:
    name: epd-fuse
    state: started
    enabled: yes

- name: install the epd-clock service
  copy:
    src: epd-clock.service
    dest: /etc/systemd/system/epd-clock.service
    owner: root
    group: root
    mode: 0644

- name: start and enable epd-clock service
  systemd:
    name: epd-clock.service
    daemon_reload: yes
    state: started
    enabled: yes
&lt;/pre&gt;
&lt;p&gt;To run the playbook, clone the repository &lt;a class="reference external" href="https://github.com/beenje/legomac"&gt;https://github.com/beenje/legomac&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone https://github.com/beenje/legomac.git
$ cd legomac
$ ansible-playbook -i hosts -k epd-demo.yml
&lt;/pre&gt;
&lt;p&gt;That's it!&lt;/p&gt;
&lt;p&gt;Of course don't forget to change the default password on your Pi.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="one-more-thing"&gt;
&lt;h2&gt;One more thing&lt;/h2&gt;
&lt;p&gt;There isn't much Python in this article but the Pi is running some
Python code.
I couldn't resist putting a &lt;a class="reference external" href="https://talkpython.fm"&gt;Talk Python To Me&lt;/a&gt;
sticker on the back :-)
It's really a great podcast and you should definitevely give it a try if
you haven't yet.
Thanks again to @mkennedy for the stickers!&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://beenje.github.io/blog/images/legomac/talkpythontome.jpg"&gt;&lt;img alt="/images/legomac/talkpythontome.thumbnail.jpg" src="http://beenje.github.io/blog/images/legomac/talkpythontome.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p&gt;Below are a few pictures. You can see more on &lt;a class="reference external" href="https://flic.kr/s/aHskVAadfo"&gt;flickr&lt;/a&gt;.&lt;/p&gt;

&lt;div id="slides_8dbe0b3f32de4a33b4b849ceafb2c236" class="carousel slide" data-ride="carousel"&gt;
    &lt;ol class="carousel-indicators"&gt;
            &lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="0" class="active"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="1"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="2"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="3"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="4"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="5"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="6"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="7"&gt;
            &lt;/li&gt;&lt;li data-target="#slides_8dbe0b3f32de4a33b4b849ceafb2c236" data-slide-to="8"&gt;
    &lt;/li&gt;&lt;/ol&gt;
    &lt;div class="carousel-inner"&gt;
                &lt;div class="carousel-item active"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/legomac.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/legomac_front_close.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/talkpythontome.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/drilling_left.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/drilling_right.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/ribbon_cable.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/display_front.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/button_front.jpg" alt=""&gt;&lt;/div&gt;
                &lt;div class="carousel-item"&gt;&lt;img class="d-block w-100" src="http://beenje.github.io/blog/images/legomac/button_top.jpg" alt=""&gt;&lt;/div&gt;
    &lt;/div&gt;
      &lt;a class="carousel-control-prev" href="http://beenje.github.io/blog/posts/my-lego-macintosh-classic-with-raspberry-pi-and-e-paper-display/#slides_8dbe0b3f32de4a33b4b849ceafb2c236" role="button" data-slide="prev"&gt;
    &lt;span class="carousel-control-prev-icon" aria-hidden="true"&gt;&lt;/span&gt;
    &lt;span class="sr-only"&gt;Previous&lt;/span&gt;
  &lt;/a&gt;
  &lt;a class="carousel-control-next" href="http://beenje.github.io/blog/posts/my-lego-macintosh-classic-with-raspberry-pi-and-e-paper-display/#slides_8dbe0b3f32de4a33b4b849ceafb2c236" role="button" data-slide="next"&gt;
    &lt;span class="carousel-control-next-icon" aria-hidden="true"&gt;&lt;/span&gt;
    &lt;span class="sr-only"&gt;Next&lt;/span&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="section" id="next"&gt;
&lt;h2&gt;Next&lt;/h2&gt;
&lt;p&gt;I didn't build this LEGO Macintosh to use it as a simple clock :-)
I have a few ideas. I'll start with a small web server so that I can receive and display messages.
That will be the subject of another &lt;a class="reference external" href="http://beenje.github.io/blog/posts/experimenting-with-asyncio-on-a-raspberry-pi"&gt;blog post&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>lego</category><category>Mac</category><category>pi</category><category>python</category><guid>http://beenje.github.io/blog/posts/my-lego-macintosh-classic-with-raspberry-pi-and-e-paper-display/</guid><pubDate>Tue, 23 May 2017 20:39:12 GMT</pubDate></item><item><title>Dockerfile anti-patterns and best practices</title><link>http://beenje.github.io/blog/posts/dockerfile-anti-patterns-and-best-practices/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been using &lt;a class="reference external" href="https://www.docker.com"&gt;Docker&lt;/a&gt; for some time now.
There is already a lot of documentation available online but I recently
saw the same "anti-patterns" several times, so I thought it was worth writing a post about
it.&lt;/p&gt;
&lt;p&gt;I won't repeat all the &lt;a class="reference external" href="https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/"&gt;Best practices for writing Dockerfiles&lt;/a&gt; here.
You should definitively read that page.&lt;/p&gt;
&lt;p&gt;I want to emphasize some things that took me some time to understand.&lt;/p&gt;
&lt;div class="section" id="avoid-invalidating-the-cache"&gt;
&lt;h2&gt;Avoid invalidating the cache&lt;/h2&gt;
&lt;p&gt;Let's take a simple example with a Python application:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM python:3.6

COPY . /app
WORKDIR /app

RUN pip install -r requirements.txt

ENTRYPOINT ["python"]
CMD ["ap.py"]
&lt;/pre&gt;
&lt;p&gt;It's actually an example I have seen several times online.
This looks fine, right?&lt;/p&gt;
&lt;p&gt;The problem is that the &lt;em&gt;COPY . /app&lt;/em&gt; command will invalidate the cache as
soon as any file in the current directory is updated.
Let's say you just change the &lt;em&gt;README&lt;/em&gt; file and run &lt;em&gt;docker build&lt;/em&gt; again.
Docker will have to re-install all the requirements because the
&lt;em&gt;RUN pip&lt;/em&gt; command is run after the &lt;em&gt;COPY&lt;/em&gt; that invalidated the cache.&lt;/p&gt;
&lt;p&gt;The requirements should only be re-installed if the &lt;em&gt;requirements.txt&lt;/em&gt;
file changes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM python:3.6

WORKDIR /app

COPY requirements.txt /app/requirements.txt
RUN pip install -r requirements.txt

COPY . /app

ENTRYPOINT ["python"]
CMD ["ap.py"]
&lt;/pre&gt;
&lt;p&gt;With this Dockerfile, the &lt;em&gt;RUN pip&lt;/em&gt; command will only be re-run when the
&lt;em&gt;requirements.txt&lt;/em&gt; file changes. It will use the cache otherwise.&lt;/p&gt;
&lt;p&gt;This is much more efficient and will save you quite some time if you have
many requirements to install.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="minimize-the-number-of-layers"&gt;
&lt;h2&gt;Minimize the number of layers&lt;/h2&gt;
&lt;p&gt;What does that really mean?&lt;/p&gt;
&lt;p&gt;Each &lt;a class="reference external" href="https://www.docker.com"&gt;Docker&lt;/a&gt; image references a list of read-only layers that represent
filesystem differences. Every command in your Dockerfile will create a new
layer.&lt;/p&gt;
&lt;p&gt;Let's use the following Dockerfile:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM centos:7

RUN yum update -y
RUN yum install -y sudo
RUN yum install -y git
RUN yum clean all
&lt;/pre&gt;
&lt;p&gt;Build the docker image and check the layers created with the &lt;em&gt;docker history&lt;/em&gt; command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ docker build -t centos-test .
...
$ docker images
REPOSITORY                       TAG                 IMAGE ID            CREATED              SIZE
centos-test                      latest              1fae366a2613        About a minute ago   470 MB
centos                           7                   98d35105a391        24 hours ago         193 MB
$ docker history centos-test
IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
1fae366a2613        2 minutes ago       /bin/sh -c yum clean all                        1.67 MB
999e7c7c0e14        2 minutes ago       /bin/sh -c yum install -y git                   133 MB
c97b66528792        3 minutes ago       /bin/sh -c yum install -y sudo                  81 MB
e0c7b450b7a8        3 minutes ago       /bin/sh -c yum update -y                        62.5 MB
98d35105a391        24 hours ago        /bin/sh -c #(nop)  CMD ["/bin/bash"]            0 B
&amp;lt;missing&amp;gt;           24 hours ago        /bin/sh -c #(nop)  LABEL name=CentOS Base ...   0 B
&amp;lt;missing&amp;gt;           24 hours ago        /bin/sh -c #(nop) ADD file:29f66b8b4bafd0f...   193 MB
&amp;lt;missing&amp;gt;           6 months ago        /bin/sh -c #(nop)  MAINTAINER https://gith...   0 B
&lt;/pre&gt;
&lt;p&gt;There are two problems with this Dockerfile:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;We added too many layers for nothing.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;yum clean all&lt;/em&gt; command is meant to reduce the size of the image but it
actually does the opposite by adding a new layer!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's check that by removing the latest command and running the build
again:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM centos:7

RUN yum update -y
RUN yum install -y sudo
RUN yum install -y git
# RUN yum clean all
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
$ docker build -t centos-test .
...
$ docker images
REPOSITORY                       TAG                 IMAGE ID            CREATED             SIZE
centos-test                      latest              999e7c7c0e14        11 minutes ago      469 MB
centos                           7                   98d35105a391        24 hours ago        193 MB
&lt;/pre&gt;
&lt;p&gt;The new image without the &lt;em&gt;yum clean all&lt;/em&gt; command is indeed smaller than the previous image (1.67 MB smaller)!&lt;/p&gt;
&lt;p&gt;If you want to remove files, it's important to do that in the same RUN command that created those files.
Otherwise there is no point.&lt;/p&gt;
&lt;p&gt;Here is the proper way to do it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM centos:7

RUN yum update -y \
  &amp;amp;&amp;amp; yum install -y \
  sudo \
  git \
  &amp;amp;&amp;amp; yum clean all
&lt;/pre&gt;
&lt;p&gt;Let's build this new image:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ docker build -t centos-test .
...
$ docker images
REPOSITORY                       TAG                 IMAGE ID            CREATED             SIZE
centos-test                      latest              54a328ef7efd        21 seconds ago      265 MB
centos                           7                   98d35105a391        24 hours ago        193 MB
$ docker history centos-test
IMAGE               CREATED              CREATED BY                                      SIZE                COMMENT
54a328ef7efd        About a minute ago   /bin/sh -c yum update -y   &amp;amp;&amp;amp; yum install ...   72.8 MB
98d35105a391        24 hours ago         /bin/sh -c #(nop)  CMD ["/bin/bash"]            0 B
&amp;lt;missing&amp;gt;           24 hours ago         /bin/sh -c #(nop)  LABEL name=CentOS Base ...   0 B
&amp;lt;missing&amp;gt;           24 hours ago         /bin/sh -c #(nop) ADD file:29f66b8b4bafd0f...   193 MB
&amp;lt;missing&amp;gt;           6 months ago         /bin/sh -c #(nop)  MAINTAINER https://gith...   0 B
&lt;/pre&gt;
&lt;p&gt;The new image is only 265 MB compared to the 470 MB of the original image.
There isn't much more to say :-)&lt;/p&gt;
&lt;p&gt;If you want to know more about images and layers, you should read the
documentation: &lt;a class="reference external" href="https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/"&gt;Understand images, containers, and storage drivers&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Avoid invalidating the cache:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;start your Dockerfile with commands that should not change often&lt;/li&gt;
&lt;li&gt;put commands that can often invalidate the cache (like COPY .) as
late as possible&lt;/li&gt;
&lt;li&gt;only add the needed files (use a .dockerignore file)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Minimize the number of layers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;put related commands in the same RUN instruction&lt;/li&gt;
&lt;li&gt;remove files in the same RUN command that created them&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>docker</category><guid>http://beenje.github.io/blog/posts/dockerfile-anti-patterns-and-best-practices/</guid><pubDate>Thu, 16 Mar 2017 21:10:49 GMT</pubDate></item><item><title>Control your accessories from Home Assistant with Siri and HomeKit</title><link>http://beenje.github.io/blog/posts/control-your-accessories-from-home-assistant-with-siri-and-homekit/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;While reading more about &lt;a class="reference external" href="https://home-assistant.io"&gt;Home Assistant&lt;/a&gt;, I
discovered it was possible to control your accessories from Home Assistant
with Siri and HomeKit. I decided to give that a try.&lt;/p&gt;
&lt;p&gt;This requires to install &lt;a class="reference external" href="https://github.com/nfarina/homebridge"&gt;Homebridge&lt;/a&gt; and
the &lt;a class="reference external" href="https://github.com/home-assistant/homebridge-homeassistant"&gt;homebridge-homeassitant plugin&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="install-homebridge"&gt;
&lt;h2&gt;Install Homebridge&lt;/h2&gt;
&lt;p&gt;Homebridge is a lightweight NodeJS server that emulates the iOS HomeKit
API. Let's install it in the same &lt;a class="reference external" href="http://beenje.github.io/blog/posts/home-assistant-on-turris-omnia-via-lxc-container"&gt;LXC container as Home Assistant&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@turris:~# lxc-attach -n homeassistant
&lt;/pre&gt;
&lt;p&gt;I followed the &lt;a class="reference external" href="https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi"&gt;Running HomeBridge on a Raspberry Pi page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We need curl and git:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# apt-get install -y curl git
&lt;/pre&gt;
&lt;p&gt;Install Node:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# curl -sL https://deb.nodesource.com/setup_6.x | bash -
## Installing the NodeSource Node.js v6.x repo...

## Populating apt-get cache...

root@homeassistant:~# apt-get install -y nodejs
&lt;/pre&gt;
&lt;p&gt;Install avahi and other dependencies:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# apt-get install -y libavahi-compat-libdnssd-dev
&lt;/pre&gt;
&lt;p&gt;Install Homebridge and dependencies still following this &lt;a class="reference external" href="https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi#install-homebridge-and-dependencies"&gt;page&lt;/a&gt;.
Note that I had a strange problem here. The &lt;em&gt;npm&lt;/em&gt; command didn't produce
any output. I found the same issue on &lt;a class="reference external" href="http://stackoverflow.com/questions/40755598/containers-lxc-attach-and-npm-no-output"&gt;stackoverflow&lt;/a&gt;
and even an &lt;a class="reference external" href="https://github.com/npm/npm/issues/15681"&gt;issue on github&lt;/a&gt;.
The workaround is just to open a new terminal...&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# npm install -g --unsafe-perm homebridge hap-nodejs node-gyp
root@homeassistant:~# cd /usr/lib/node_modules/homebridge/
root@homeassistant:/usr/lib/node_modules/homebridge# npm install --unsafe-perm bignum
root@homeassistant:/usr/lib/node_modules/homebridge# cd ../hap-nodejs/node_modules/mdns/
root@homeassistant:/usr/lib/node_modules/hap-nodejs/node_modules/mdns# node-gyp BUILDTYPE=Release rebuild
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="install-and-configure-homebridge-homeassistant-plugin"&gt;
&lt;h2&gt;Install and configure homebridge-homeassistant plugin&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:/usr/lib/node_modules/hap-nodejs/node_modules/mdns# cd
root@homeassistant:~# npm install -g --unsafe-perm homebridge-homeassistant
&lt;/pre&gt;
&lt;p&gt;Try to start Homebridge:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# su -s /bin/bash homeassistant
homeassistant@homeassistant:~$ homebridge
&lt;/pre&gt;
&lt;p&gt;Homebridge won't do anything until you've created a configuration file.
So press CTRL-C and create the file &lt;cite&gt;~/.homebridge/config.json&lt;/cite&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
homeassistant@homeassistant:~$ cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; ~/.homebridge/config.json
{
  "bridge": {
    "name": "Homebridge",
    "username": "CC:22:3D:E3:CE:30",
    "port": 51826,
    "pin": "031-45-154"
  },

  "platforms": [
    {
      "platform": "HomeAssistant",
      "name": "HomeAssistant",
      "host": "http://localhost:8123",
      "logging": false
    }
 ]
}
EOF
&lt;/pre&gt;
&lt;p&gt;Note that you can change the username and pin code.
You will need the PIN code to add the Homebridge accessory to HomeKit.&lt;/p&gt;
&lt;p&gt;Check the &lt;a class="reference external" href="https://github.com/home-assistant/homebridge-homeassistant#configuration"&gt;Home Assistant plugin page&lt;/a&gt;
for more information on how to configure the plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="automatically-start-homebridge"&gt;
&lt;h2&gt;Automatically start Homebridge&lt;/h2&gt;
&lt;p&gt;Let's configure systemd.
Create the file &lt;cite&gt;/etc/systemd/system/home-assistant@homebridge.service&lt;/cite&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; /etc/systemd/system/home-assistant@homebridge.service
[Unit]
Description=Node.js HomeKit Server
After=syslog.target network-online.target

[Service]
Type=simple
User=homeassistant
ExecStart=/usr/bin/homebridge -U /home/homeassistant/.homebridge
Restart=on-failure
RestartSec=10
KillMode=process

[Install]
WantedBy=multi-user.target
EOF
&lt;/pre&gt;
&lt;p&gt;Enable and launch Homebridge:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
root@homeassistant:~# systemctl --system daemon-reload
root@homeassistant:~# systemctl enable home-assistant@homebridge
Created symlink from /etc/systemd/system/multi-user.target.wants/home-assistant@homebridge.service to /etc/systemd/system/home-assistant@homebridge.service.
root@homeassistant:~# systemctl start home-assistant@homebridge
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-homebridge-to-ios"&gt;
&lt;h2&gt;Adding Homebridge to iOS&lt;/h2&gt;
&lt;p&gt;Homebridge and the Home Assistant plugin are now running.
Using the Home app on your iOS device, you should be able to add the accessory "Homebridge".
See &lt;a class="reference external" href="https://github.com/nfarina/homebridge#adding-homebridge-to-ios"&gt;Homebridge README&lt;/a&gt; for
more information. You will need to enter the &lt;em&gt;PIN code&lt;/em&gt; defined in your
&lt;cite&gt;config.json&lt;/cite&gt; file.&lt;/p&gt;
&lt;p&gt;You should then see the Homebridge bridge on your device:&lt;/p&gt;
&lt;img alt="/images/homebridge.png" src="http://beenje.github.io/blog/images/homebridge.png"&gt;
&lt;p&gt;And it will automatically add all the accessories defined in Home Assistant!&lt;/p&gt;
&lt;img alt="/images/home_accessories.png" src="http://beenje.github.io/blog/images/home_accessories.png"&gt;
&lt;p&gt;You can now even use Siri to control your devices, like turning ON or OFF the TV VPN.&lt;/p&gt;
&lt;img alt="/images/siri_tv_vpn_off.png" src="http://beenje.github.io/blog/images/siri_tv_vpn_off.png"&gt;
&lt;p&gt;Note that I renamed the original switch to make it easier to pronounce.
As described in the &lt;a class="reference external" href="https://github.com/nfarina/homebridge#interacting-with-your-devices"&gt;README&lt;/a&gt;,
avoid names usually used by Siri like "Radio" or "Sonos".&lt;/p&gt;
&lt;p&gt;That's it! Homebridge is really a nice addition to Home Assistant if you have some iOS devices at home.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>home-assistant</category><category>iOS</category><category>LXC</category><category>turris</category><guid>http://beenje.github.io/blog/posts/control-your-accessories-from-home-assistant-with-siri-and-homekit/</guid><pubDate>Thu, 16 Feb 2017 21:58:56 GMT</pubDate></item><item><title>Docker and conda</title><link>http://beenje.github.io/blog/posts/docker-and-conda/</link><dc:creator>Benjamin Bertrand</dc:creator><description>&lt;div&gt;&lt;p&gt;I just read a blog post about &lt;a class="reference external" href="http://fmgdata.kinja.com/using-docker-with-conda-environments-1790901398"&gt;Using Docker with Conda Environments&lt;/a&gt;.
I do things slightly differently so I thought I would share an example of
Dockerfile I use:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FROM continuumio/miniconda3:latest

# Install extra packages if required
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
    xxxxxx \
    &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

# Add the user that will run the app (no need to run as root)
RUN groupadd -r myuser &amp;amp;&amp;amp; useradd -r -g myuser myuser

WORKDIR /app

# Install myapp requirements
COPY environment.yml /app/environment.yml
RUN conda config --add channels conda-forge \
    &amp;amp;&amp;amp; conda env create -n myapp -f environment.yml \
    &amp;amp;&amp;amp; rm -rf /opt/conda/pkgs/*

# Install myapp
COPY . /app/
RUN chown -R myuser:myuser /app/*

# activate the myapp environment
ENV PATH /opt/conda/envs/myapp/bin:$PATH
&lt;/pre&gt;
&lt;p&gt;I don't run &lt;cite&gt;source activate myapp&lt;/cite&gt; but just use &lt;cite&gt;ENV&lt;/cite&gt; to update the &lt;cite&gt;PATH&lt;/cite&gt;
variable. There is only one environment in the docker image. No need for the extra
checks done by the activate script.&lt;/p&gt;
&lt;p&gt;With this Dockerfile, any command will be run in the &lt;cite&gt;myapp&lt;/cite&gt;
environment.&lt;/p&gt;
&lt;p&gt;Just a few additional notes:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Be sure to only copy the file &lt;cite&gt;environment.yml&lt;/cite&gt; before to copy the full
current directory. Otherwise any change in the directory would
invalidate the docker cache.
We only want to re-create the conda environment if &lt;cite&gt;environment.yml&lt;/cite&gt;
changes.&lt;/li&gt;
&lt;li&gt;I always add the &lt;a class="reference external" href="https://conda-forge.github.io"&gt;conda-forge channel&lt;/a&gt;.
Check this &lt;a class="reference external" href="https://www.continuum.io/blog/developer-blog/community-conda-forge"&gt;post&lt;/a&gt;
if you haven't heard of it yet.&lt;/li&gt;
&lt;li&gt;I clean some cache (&lt;em&gt;/var/lib/apt/lists/&lt;/em&gt; and &lt;em&gt;/opt/conda/pkgs/&lt;/em&gt;) to
make the image a bit smaller.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I switched from virtualenv to &lt;a class="reference external" href="https://conda.io"&gt;conda&lt;/a&gt; a while ago and I really enjoy it.
A big thanks to &lt;a class="reference external" href="https://www.continuum.io"&gt;Continuum Analytics&lt;/a&gt;!&lt;/p&gt;&lt;/div&gt;</description><category>conda</category><category>docker</category><category>python</category><guid>http://beenje.github.io/blog/posts/docker-and-conda/</guid><pubDate>Sat, 28 Jan 2017 22:32:56 GMT</pubDate></item></channel></rss>